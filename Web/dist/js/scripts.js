var app=angular.module("app",["ui.router"]),CONSTANTS=function(){var e={};return e.API_BASE_URL="http://discoverbandapi.int/public/api",e}();app.config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/"),e.state("home",{url:"/",templateUrl:"app/pages/home.html",controller:"homeController as home"}).state("solo",{url:"/solo",templateUrl:"app/pages/solo.html",controller:"soloController as solo"}).state("merged",{url:"/merged",templateUrl:"app/pages/merged.html",controller:"mergedController as merged"}).state("band",{url:"/band",templateUrl:"app/pages/band.html",controller:"bandController as band"}).state("merge",{url:"/merge",templateUrl:"app/pages/merge.html",controller:"mergeController as merge"})}]),app.controller("bandController",["bandService",function(e){function t(){r.gg=a.testValue}var r=this,a=e;t()}]),app.controller("homeController",function(){function e(){t.test="This value has been initiated through _init() and bound to the scope!"}var t=this;e()}),app.controller("mergeController",function(){function e(){}e()}),app.controller("mergedController",function(){function e(){t.test="Merged"}var t=this;e()}),app.controller("soloController",["$scope","bandService","soloService",function(e,t,r){function a(){s.getTracks().then(function(e){l.soloTracks=e.data,l.filteredTracks=l.soloTracks},function(e){console.log(e)})}function o(){l.formData={artist:"layer",title:"blood"},angular.forEach(l.instruments,function(e,t){l.formData[e.id]=!0})}function n(){l.filteredTracks=[],angular.forEach(l.soloTracks,function(e,t){console.log(e),goodSearch=!0,""!=!l.formData.artist||e.artist.name.match(new RegExp(l.formData.artist,"i"))||(goodSearch=!1),""!=!l.formData.title||e.songname.match(new RegExp(l.formData.title,"i"))||(goodSearch=!1),l.formData[e.instrument_id]||(goodSearch=!1),goodSearch&&l.filteredTracks.push(e),console.log(l.filteredTracks)})}function i(){o(),a()}var l=this,c=t,s=r;l.advancedFilter=function(e){return e.artist.name.match(new RegExp(l.formData.artist,"i"))&&e.songname.match(new RegExp(l.formData.title,"i"))},l.addToBand=function(e){c.trackArray.push(e)},e.$watch(function(){return l.formData},function(){l.formData&&n()},!0),l.track1=new Audio("dist/audio/Behemoth - Conquer All - Drum.mp3"),l.track2=new Audio("dist/audio/Behemoth - Conquer All - Guitar.mp3"),l.instruments=[{name:"Guitar",id:1},{name:"Drum",id:2},{name:"Bass",id:3},{name:"Piano",id:4}],i()}]),app.service("bandService",function(){var e=this;e.testValue="This value is from a service!",e.trackArray=[],e.testFunction=function(){alert("Test function called from inside service!")}}),app.service("soloService",["$http",function(e){function t(t,r){return r?"":r={},e.get(t,r)}var r=this;r.getTracks=function(){var e=CONSTANTS.API_BASE_URL+"/tracks";return t(e)},r.getTrackById=function(e){var r=CONSTANTS.API_BASE_URL+"/tracks/"+e;return t(r)}}]),app.directive("dcbBand",["bandService",function(e){return{restrict:"E",templateUrl:"app/directives/dcb-band/dcb-band.html",replace:!0,scope:{},controllerAs:"band",controller:function(){function e(){t.value="NewBand"}var t=this;e()}}}]),app.directive("dcbHeader",function(){return{restrict:"E",templateUrl:"app/directives/dcb-header/dcb-header.html",replace:!0,scope:{},controllerAs:"head",controller:function(){function e(){t.value="This is a directive test value!"}var t=this;e()}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
