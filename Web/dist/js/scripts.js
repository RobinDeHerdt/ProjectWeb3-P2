var app=angular.module("app",["ui.router","satellizer"]),CONSTANTS=function(){var e={};return e.API_BASE_URL="http://discoverbandapi.int/public/api",e}();app.config(["$stateProvider","$urlRouterProvider","$authProvider",function(e,r,t){t.loginUrl=CONSTANTS.API_BASE_URL+"/authenticate",r.otherwise("/"),e.state("home",{url:"/",templateUrl:"app/pages/home.html",controller:"homeController as home"}).state("solo",{url:"/solo",templateUrl:"app/pages/solo.html",controller:"soloController as solo"}).state("merged",{url:"/merged",templateUrl:"app/pages/merged.html",controller:"mergedController as merged"})}]),app.controller("homeController",["instrumentService","filterService",function(e,r){function t(){n.filterData=o.filterData}var n=this,o=r;t()}]),app.controller("mergeController",function(){function e(){}e()}),app.controller("mergedController",function(){function e(){r.test="Merged"}var r=this;e()}),app.controller("soloController",["$scope","bandService","soloService","instrumentService","filterService",function(e,r,t,n,o){function a(){d.getTracks().then(function(e){s.soloTracks=e.data,s.filteredTracks=s.soloTracks,i()},function(e){console.log(e)})}function i(){s.filteredTracks=[],angular.forEach(s.soloTracks,function(e,r){goodSearch=!0,""!=!s.filterData.artist||e.artist.name.match(new RegExp(s.filterData.artist,"i"))||(goodSearch=!1),""!=!s.filterData.title||e.songname.match(new RegExp(s.filterData.title,"i"))||(goodSearch=!1),s.filterData[e.instrument_id]||(goodSearch=!1),goodSearch&&s.filteredTracks.push(e)})}function c(e,r,t){for(var n=0,o=e.length;n<o;n++)if(e[n][t]===r)return n;return-1}function l(){a(),s.instruments=p.instruments,s.filterData=f.filterData,s.bandTrackIdArray=[],angular.forEach(u.trackArray,function(e,r){s.bandTrackIdArray.push(e.id)})}var s=this,u=r,d=t,p=n,f=o;s.addToBand=function(e){u.trackArray.push(e),angular.forEach(u.trackArray,function(e,r){s.bandTrackIdArray.push(e.id)}),console.log("Track added to new band: "+e),console.log(u.trackArray)},s.removeFromBand=function(e){index=c(u.trackArray,e.id,"id"),index>-1&&(u.trackArray.splice(index,1),s.bandTrackArray=u.trackArray,intIndex=s.bandTrackIdArray.indexOf(e.id),intIndex>-1&&s.bandTrackIdArray.splice(intIndex,1)),console.log("Track removed from new band: "+e),console.log(u.trackArray)},e.$watch(function(){return s.filterData},function(){s.filterData&&i()},!0),s.track1=new Audio("dist/audio/Behemoth - Conquer All - Drum.mp3"),s.track2=new Audio("dist/audio/Behemoth - Conquer All - Guitar.mp3"),l()}]),app.filter("band",function(){return function(e,r){var t=!1;return angular.forEach(r,function(r,n){r==e&&(t=!0)}),t}}),app.service("bandService",function(){var e=this;e.testValue="This value is from a service!",e.trackArray=[],e.testFunction=function(){alert("Test function called from inside service!")}}),app.service("filterService",["instrumentService",function(e){function r(){t.createFilterData()}var t=this,n=e;t.createFilterData=function(){t.filterData={artist:"",title:""},angular.forEach(n.instruments,function(e,r){t.filterData[e.id]=!0})},r()}]),app.service("instrumentService",["$http",function(e){function r(r,t){return t?"":t={},e.get(r,t)}var t=this;t.getInstruments=function(){var e=CONSTANTS.API_BASE_URL+"/instruments";t.instruments=r(e)},t.instruments=[{name:"Lead-guitar",id:1},{name:"Drum",id:2},{name:"Bass",id:3},{name:"Keys",id:4}]}]),app.service("loginService",["$http",function(e){var r=this;r.getUser=function(){e.get(CONSTANTS.API_BASE_URL+"/user").success(function(e){console.log(e)}).error(function(e){console.log(e)})}}]),app.service("soloService",["$http",function(e){function r(r,t){return t?"":t={},e.get(r,t)}var t=this;t.getTracks=function(){var e=CONSTANTS.API_BASE_URL+"/tracks";return r(e)},t.getTrackById=function(e){var t=CONSTANTS.API_BASE_URL+"/tracks/"+e;return r(t)}}]),app.directive("dcbLogin",function(){return{restrict:"E",templateUrl:"app/directives/dcb-login/dcb-login.html",replace:!0,scope:{},controllerAs:"login",controller:["$auth","loginService",function(e,r){var t=this,n=r,o=document.getElementById("login-spinner"),a={lines:13,length:28,width:14,radius:42,scale:.4,corners:1,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner",top:"60%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};t.login=function(){console.log("Sent");var r=new Spinner(a).spin(o);t.loading=!0;var i={email:t.email,password:t.password};e.login(i).then(function(e){r.stop(),t.loading=!1,$("#login_modal").modal(),$("#login_modal").modal("close"),console.log(e),n.getUser()},function(e){r.stop(),t.loading=!1,console.log(e)})}}]}}),app.directive("dcbHeader",function(){return{restrict:"E",templateUrl:"app/directives/dcb-header/dcb-header.html",replace:!0,scope:{},controllerAs:"head",controller:["loginService",function(e){function r(){t.value="This is a directive test value!"}var t=this;t.showLogin=function(){$("#login_modal").modal(),$("#login_modal").modal("open")},t.showRegister=function(){$("#register_modal").modal(),$("#register_modal").modal("open")},r()}]}}),app.directive("dcbRegister",function(){return{restrict:"E",templateUrl:"app/directives/dcb-register/dcb-register.html",replace:!0,scope:{},controllerAs:"register",controller:function(){}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
