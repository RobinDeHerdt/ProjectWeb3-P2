var app=angular.module("app",["ui.router","satellizer","ngCookies","ngFileUpload"]),CONSTANTS=function(){var e={};return e.API_BASE_URL="http://discoverbandapi.int/public/api",e}();app.config(["$stateProvider","$urlRouterProvider","$authProvider",function(e,r,t){t.loginUrl=CONSTANTS.API_BASE_URL+"/login",t.signupUrl=CONSTANTS.API_BASE_URL+"/register",r.otherwise("/"),e.state("home",{url:"/",templateUrl:"app/pages/home.html",controller:"homeController as home"}).state("solo",{url:"/solo",templateUrl:"app/pages/solo.html",controller:"soloController as solo"}).state("merged",{url:"/merged",templateUrl:"app/pages/merged.html",controller:"mergedController as merged"}).state("band",{url:"/band",templateUrl:"app/pages/band.html",controller:"bandController as band"}).state("merge",{url:"/merge",templateUrl:"app/pages/merge.html",controller:"mergeController as merge"}).state("profile",{url:"/profile",templateUrl:"app/pages/profile.html",controller:"profileController as profile"}).state("upload",{url:"/upload",templateUrl:"app/pages/upload.html",controller:"uploadController as upload"})}]),app.controller("bandController",["bandService",function(e){function r(){t.trackArray=n.getTrackArray}var t=this,n=e;r()}]),app.controller("homeController",["instrumentService","filterService",function(e,r){function t(){n.filterData=a.soloFilterData}var n=this,a=r;t()}]),app.controller("mergeController",function(){function e(){}e()}),app.controller("mergedController",["$scope","mergedService","filterService",function(e,r,t){function n(){r.getTracks().then(function(e){i.mergedTracks=e.data,i.filteredTracks=i.mergedTracks,a(),angular.forEach(i.mergedTracks,function(e,r){newTrack=new Audio("dist/audio/Behemoth - Conquer All - Drum.mp3"),i.mergedTrackAudio[e.id]=newTrack})},function(e){console.log(e)})}function a(){i.filteredTracks=[],angular.forEach(i.mergedTracks,function(e,r){goodSearch=!0,""!=!i.filterData.artist||e.artist.name.match(new RegExp(i.filterData.artist,"i"))||(goodSearch=!1),""!=!i.filterData.title||e.songname.match(new RegExp(i.filterData.title,"i"))||(goodSearch=!1),goodSearch&&i.filteredTracks.push(e)})}function o(){i.mergedTrackAudio=[],i.currentAudioTrackId="",n(),i.filterData=c.mergedFilterData}var i=this,c=t;i.play=function(e){""!=i.currentAudioTrackId&&i.pause(i.currentAudioTrackId),i.currentAudioTrackId=e,i.mergedTrackAudio[e].play()},i.pause=function(e){i.mergedTrackAudio[e].pause(),i.currentAudioTrackId=""},e.$watch(function(){return i.filterData},function(){i.filterData&&a()},!0),i.track1=new Audio("dist/audio/Behemoth - Conquer All - Drum.mp3"),i.track2=new Audio("dist/audio/Behemoth - Conquer All - Guitar.mp3"),o()}]),app.controller("profileController",["userService",function(e){function r(){n.getUser().then(function(e){t.username=e.data.username,t.email=e.data.email})}var t=this,n=e,a=document.getElementById("update-profile-spinner"),o={lines:13,length:28,width:12,radius:42,scale:.15,corners:1,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner",top:"89%",left:"25.5%",shadow:!1,hwaccel:!1,position:"absolute"};t.update=function(){var e=new Spinner(o).spin(a);t.loading=!0;var r={username:t.username,email:t.email};n.updateUser(r).then(function(r){e.stop(),t.loading=!1},function(r){e.stop(),t.loading=!1})},r()}]),app.controller("soloController",["$scope","bandService","soloService","instrumentService","filterService",function(e,r,t,n,a){function o(){u.getTracks().then(function(e){l.soloTracks=e.data,l.filteredTracks=l.soloTracks,i(),angular.forEach(l.soloTracks,function(e,r){newTrack=new Audio("http://discoverbandapi.int/public/audio/"+e.file_url),l.soloTrackAudio[e.id]=newTrack})},function(e){console.log(e)})}function i(){l.filteredTracks=[],angular.forEach(l.soloTracks,function(e,r){goodSearch=!0,""!=!l.filterData.artist||e.artist.name.match(new RegExp(l.filterData.artist,"i"))||(goodSearch=!1),""!=!l.filterData.title||e.songname.match(new RegExp(l.filterData.title,"i"))||(goodSearch=!1),l.filterData[e.instrument_id]||(goodSearch=!1),goodSearch&&l.filteredTracks.push(e)})}function c(){l.soloTrackAudio=[],l.currentAudioTrackId="",o(),l.instruments=d.instruments,l.filterData=p.soloFilterData,l.trackArray=s.getTrackArray,l.bandTrackIdArray=s.getTrackIdArray,l.trackArrayCount=s.getTrackArrayCount}var l=this,s=r,u=t,d=n,p=a;l.addToBand=function(e){s.addToTrackArray(e),console.log("Track added to new band: "+e)},l.removeFromBand=function(e){s.removeFromTrackArray(e),console.log("Track removed from new band: "+e)},l.play=function(e){""!=l.currentAudioTrackId&&l.pause(l.currentAudioTrackId),l.currentAudioTrackId=e,l.soloTrackAudio[e].play()},l.pause=function(e){l.soloTrackAudio[e].pause(),l.currentAudioTrackId=""},e.$watch(function(){return l.filterData},function(){l.filterData&&i()},!0),c()}]),app.controller("uploadController",["Upload","artistService","instrumentService","soloService",function(e,r,t,n){function a(){i.uploaded=!1,i.showform=!1,i.instruments=s.getInstruments().then(function(e){i.instruments=e.data,console.log(e.data)},function(e){console.log(e)}),i.artists=l.getArtists().then(function(e){console.log(e.data),i.artists=e.data},function(e){console.log(e)})}function o(e){for(var r=e+"=",t=decodeURIComponent(document.cookie),n=t.split(";"),a=0;a<n.length;a++){for(var o=n[a];" "==o.charAt(0);)o=o.substring(1);if(0==o.indexOf(r))return o.substring(r.length,o.length)}return""}var i=this,c=n,l=r,s=t,u=document.getElementById("upload-spinner"),d={lines:13,length:28,width:12,radius:42,scale:.3,corners:1,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner",top:"40%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};i.uploadFile=function(r){var t=new Spinner(d).spin(u);i.loading=!0,i.uploaded=!1,e.upload({url:CONSTANTS.API_BASE_URL+"/upload",fileFormDataName:"song",sendFieldsAs:"form",data:{song:r}}).then(function(e){i.filename=e.data.name,i.tracklength=e.data.length,t.stop(),i.loading=!1,i.uploaded=!0,i.showform=!0,$("select").material_select()},function(e){i.loading=!1,t.stop(),console.log("Error")})},i.save=function(){var e=JSON.parse(o("user")).userId,r={name:i.songname,file_url:i.filename,track_length:i.tracklength,user_id:e,instrument_id:i.instrumentsdropdown,artist_id:i.artistsdropdown};c.insertTrack(r).then(function(e){console.log(e)},function(e){console.log(e)})},a()}]),app.filter("band",function(){return function(e,r){var t=!1;return angular.forEach(r,function(r,n){r==e&&(t=!0)}),t}}),app.service("artistService",["$http",function(e){function r(r,t){return t?"":t={},e.get(r,t)}var t=this;t.getArtists=function(){var e=CONSTANTS.API_BASE_URL+"/artists";return r(e)}}]),app.service("authService",["$auth","$rootScope","$cookies","$state","userService",function(e,r,t,n,a){function o(e,n,a,o){var c=new Date;c=c.setTime(c.getTime()+1e3*e.expires_in),c=new Date(c);var l={token:e,userId:n,username:a,email:o};i.user=l,t.putObject("user",l,{expires:c}),r.isLoggedIn=!0,"1"==l.isAdmin?r.isAdmin=!0:r.isAdmin=!1}var i=this,c=a;i.isLoggedIn=null,i.login=function(r){e.login(r).then(function(e){token=e.data.token,id=0,username="",email="",c.getUser().then(function(e){id=e.data.id,username=e.data.username,email=e.data.email,o(token,id,username,email),i.isLoggedIn=!0},function(e){console.log(e),i.isLoggedIn=!1})},function(e){console.log(e),i.isLoggedIn=!1})},i.logout=function(){e.logout().then(function(e){r.isLoggedIn=!1,r.isAdmin=!1,i.user=null,i.isLoggedIn=null,t.remove("user"),n.go("home")},function(e){console.log(e)})},i.register=function(e){var r=CONSTANTS.API_BASE_URL+"/user";return $http.post(r,e)}}]),app.service("bandService",function(){function e(){return trackArrayCount++,trackArrayCount}function r(){return trackArrayCount--,trackArrayCount}function t(e){return trackIdArray.push(e),trackIdArray}function n(e){return index=trackIdArray.indexOf(e),index>-1&&trackIdArray.splice(index,1),trackIdArray}var a=this;trackArray=[],trackIdArray=[],trackArrayCount=0,a.getTrackArrayCount=function(){return trackArrayCount},a.getTrackIdArray=function(){return trackIdArray},a.addToTrackArray=function(r){return trackArray.push(r),e(),t(r.id),trackArray},a.removeFromTrackArray=function(e){return index=e.arrayObjectIndexOf(trackArray,e.id,"id"),index>-1&&trackArray.splice(index,1),r(),n(e.id),trackArray},a.getTrackArray=function(){return trackArray},a.testFunction=function(){alert("Test function called from inside service!")}}),app.service("filterService",["instrumentService",function(e){function r(){t.createSoloFilterData(),t.createMergedFilterData()}var t=this,n=e;t.createSoloFilterData=function(){t.soloFilterData={artist:"",title:""},angular.forEach(n.instruments,function(e,r){t.soloFilterData[e.id]=!0})},t.createMergedFilterData=function(){t.mergedFilterData={artist:"",title:""}},r()}]),app.service("instrumentService",["$http",function(e){function r(r,t){return t?"":t={},e.get(r,t)}var t=this;t.getInstruments=function(){var e=CONSTANTS.API_BASE_URL+"/instruments";return r(e)},t.instruments=[{name:"Lead-guitar",id:1},{name:"Drum",id:2},{name:"Bass",id:3},{name:"Keys",id:4}]}]),app.service("mergedService",["$http",function(e){function r(r,t){return t?"":t={},e.get(r,t)}var t=this;t.getTracks=function(){var e=CONSTANTS.API_BASE_URL+"/mergedtracks";return r(e)},t.getTrackById=function(e){var t=CONSTANTS.API_BASE_URL+"/mergedtracks/"+e;return r(t)}}]),app.service("soloService",["$http",function(e){function r(r,t){return t?"":t={},e.get(r,t)}var t=this;t.getTracks=function(){var e=CONSTANTS.API_BASE_URL+"/tracks";return r(e)},t.getTrackById=function(e){var t=CONSTANTS.API_BASE_URL+"/tracks/"+e;return r(t)},t.insertTrack=function(r){return e.post(CONSTANTS.API_BASE_URL+"/tracks/create",r)}}]),app.service("userService",["$http",function(e){var r=this;r.getUser=function(){return e.get(CONSTANTS.API_BASE_URL+"/user")},r.updateUser=function(r){return e.post(CONSTANTS.API_BASE_URL+"/user",r)}}]),app.directive("dcbBand",["bandService",function(e){return{restrict:"E",templateUrl:"app/directives/dcb-band/dcb-band.html",replace:!0,scope:{},controllerAs:"band",controller:function(){function e(){r.value="NewBand"}var r=this;e()}}}]),app.directive("dcbHeader",["bandService",function(e){return{restrict:"E",templateUrl:"app/directives/dcb-header/dcb-header.html",replace:!0,scope:{},controllerAs:"head",controller:["$scope","userService","authService","$auth","$rootScope",function(r,t,n,a,o){function i(){c.trackArray=u.getTrackArray,c.trackArrayCount=u.getTrackArrayCount,a.isAuthenticated()&&l.getUser().then(function(e){o.username=e.data.username})}var c=this,l=t,s=n,u=e;c.showLogin=function(){$("#login_modal").modal(),$("#login_modal").modal("open")},c.logout=function(){s.logout()},c.showRegister=function(){$("#register_modal").modal(),$("#register_modal").modal("open")},c.isAuthenticated=function(){return a.isAuthenticated()},i(),r.$watch(function(){return s.user},function(){c.user=s.user})}]}}]),app.directive("dcbRegister",["userService",function(e){return{restrict:"E",templateUrl:"app/directives/dcb-register/dcb-register.html",replace:!0,scope:{},controllerAs:"register",controller:["$auth","$scope","$rootScope","userService","authService",function(e,r,t,n,a){var o=this,i=a,c=document.getElementById("register-spinner"),l={lines:13,length:28,width:14,radius:42,scale:.4,corners:1,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner",top:"60%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};o.register=function(){var t=new Spinner(l).spin(c);o.loading=!0;var n={username:o.username,email:o.email,password:o.password};e.signup(n).then(function(e){i.login(n);var a=r.$watch(function(){return i.isLoggedIn},function(){i.isLoggedIn&&(o.loading=!1,$("#register_modal").modal(),$("#register_modal").modal("close"),t.stop(),a()),i.isLoggedIn===!1&&(t.stop(),o.loading=!1,a())},!0)})["catch"](function(e){t.stop(),o.loading=!1,console.log(e)})}}]}}]),app.directive("dcbLogin",function(){return{restrict:"E",templateUrl:"app/directives/dcb-login/dcb-login.html",replace:!0,scope:{},controllerAs:"login",controller:["$auth","$scope","$rootScope","userService","authService","$cookies",function(e,r,t,n,a,o){var i=this,c=a,l=document.getElementById("login-spinner"),s={lines:13,length:28,width:14,radius:42,scale:.4,corners:1,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner",top:"60%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};i.login=function(){var e=new Spinner(s).spin(l);i.loading=!0;var t={email:i.email,password:i.password};c.login(t);var n=r.$watch(function(){return c.isLoggedIn},function(){c.isLoggedIn&&(i.loading=!1,$("#login_modal").modal(),$("#login_modal").modal("close"),e.stop(),n()),c.isLoggedIn===!1&&(e.stop(),i.loading=!1,n())},!0)}}]}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
