var app=angular.module("app",["ui.router","satellizer","ngCookies"]),CONSTANTS=function(){var e={};return e.API_BASE_URL="http://discoverbandapi.int/public/api",e}();app.config(["$stateProvider","$urlRouterProvider","$authProvider",function(e,r,t){t.loginUrl=CONSTANTS.API_BASE_URL+"/login",t.signupUrl=CONSTANTS.API_BASE_URL+"/register",r.otherwise("/"),e.state("home",{url:"/",templateUrl:"app/pages/home.html",controller:"homeController as home"}).state("solo",{url:"/solo",templateUrl:"app/pages/solo.html",controller:"soloController as solo"}).state("merged",{url:"/merged",templateUrl:"app/pages/merged.html",controller:"mergedController as merged"}).state("band",{url:"/band",templateUrl:"app/pages/band.html",controller:"bandController as band"}).state("merge",{url:"/merge",templateUrl:"app/pages/merge.html",controller:"mergeController as merge"}).state("profile",{url:"/profile",templateUrl:"app/pages/profile.html",controller:"profileController as profile"})}]),app.controller("bandController",["bandService",function(e){function r(){t.trackArray=n.getTrackArray}var t=this,n=e;r()}]),app.controller("homeController",["instrumentService","filterService",function(e,r){function t(){n.filterData=a.soloFilterData}var n=this,a=r;t()}]),app.controller("mergeController",function(){function e(){}e()}),app.controller("mergedController",["$scope","mergedService","filterService",function(e,r,t){function n(){r.getTracks().then(function(e){i.mergedTracks=e.data,i.filteredTracks=i.mergedTracks,a(),angular.forEach(i.mergedTracks,function(e,r){newTrack=new Audio("dist/audio/Behemoth - Conquer All - Drum.mp3"),i.mergedTrackAudio[e.id]=newTrack})},function(e){console.log(e)})}function a(){i.filteredTracks=[],angular.forEach(i.mergedTracks,function(e,r){goodSearch=!0,""!=!i.filterData.artist||e.artist.name.match(new RegExp(i.filterData.artist,"i"))||(goodSearch=!1),""!=!i.filterData.title||e.songname.match(new RegExp(i.filterData.title,"i"))||(goodSearch=!1),goodSearch&&i.filteredTracks.push(e)})}function o(){i.mergedTrackAudio=[],i.currentAudioTrackId="",n(),i.filterData=c.mergedFilterData}var i=this,c=t;i.play=function(e){""!=i.currentAudioTrackId&&i.pause(i.currentAudioTrackId),i.currentAudioTrackId=e,i.mergedTrackAudio[e].play()},i.pause=function(e){i.mergedTrackAudio[e].pause(),i.currentAudioTrackId=""},e.$watch(function(){return i.filterData},function(){i.filterData&&a()},!0),i.track1=new Audio("dist/audio/Behemoth - Conquer All - Drum.mp3"),i.track2=new Audio("dist/audio/Behemoth - Conquer All - Guitar.mp3"),o()}]),app.controller("profileController",["userService",function(e){function r(){n.getUser().then(function(e){t.username=e.data.username,t.email=e.data.email})}var t=this,n=e,a=document.getElementById("update-profile-spinner"),o={lines:13,length:28,width:12,radius:42,scale:.15,corners:1,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner",top:"89%",left:"25.5%",shadow:!1,hwaccel:!1,position:"absolute"};t.update=function(){var e=new Spinner(o).spin(a);t.loading=!0;var r={username:t.username,email:t.email};n.updateUser(r).then(function(r){e.stop(),t.loading=!1},function(r){e.stop(),t.loading=!1})},r()}]),app.controller("soloController",["$scope","bandService","soloService","instrumentService","filterService",function(e,r,t,n,a){function o(){s.getTracks().then(function(e){l.soloTracks=e.data,l.filteredTracks=l.soloTracks,i(),angular.forEach(l.soloTracks,function(e,r){newTrack=new Audio("dist/audio/Behemoth - Conquer All - Drum.mp3"),l.soloTrackAudio[e.id]=newTrack})},function(e){console.log(e)})}function i(){l.filteredTracks=[],angular.forEach(l.soloTracks,function(e,r){goodSearch=!0,""!=!l.filterData.artist||e.artist.name.match(new RegExp(l.filterData.artist,"i"))||(goodSearch=!1),""!=!l.filterData.title||e.songname.match(new RegExp(l.filterData.title,"i"))||(goodSearch=!1),l.filterData[e.instrument_id]||(goodSearch=!1),goodSearch&&l.filteredTracks.push(e)})}function c(){l.soloTrackAudio=[],l.currentAudioTrackId="",o(),l.instruments=d.instruments,l.filterData=p.soloFilterData,l.trackArray=u.getTrackArray,l.bandTrackIdArray=u.getTrackIdArray,l.trackArrayCount=u.getTrackArrayCount}var l=this,u=r,s=t,d=n,p=a;l.addToBand=function(e){u.addToTrackArray(e),console.log("Track added to new band: "+e)},l.removeFromBand=function(e){u.removeFromTrackArray(e),console.log("Track removed from new band: "+e)},l.play=function(e){""!=l.currentAudioTrackId&&l.pause(l.currentAudioTrackId),l.currentAudioTrackId=e,l.soloTrackAudio[e].play()},l.pause=function(e){l.soloTrackAudio[e].pause(),l.currentAudioTrackId=""},e.$watch(function(){return l.filterData},function(){l.filterData&&i()},!0),l.track1=new Audio("dist/audio/Behemoth - Conquer All - Drum.mp3"),l.track2=new Audio("dist/audio/Behemoth - Conquer All - Guitar.mp3"),c()}]),app.filter("band",function(){return function(e,r){var t=!1;return angular.forEach(r,function(r,n){r==e&&(t=!0)}),t}}),app.service("authService",["$auth","$rootScope","$cookies","$state","userService",function(e,r,t,n,a){function o(e,n,a,o){var c=new Date;c=c.setTime(c.getTime()+1e3*e.expires_in),c=new Date(c);var l={token:e,userId:n,username:a,email:o};i.user=l,t.putObject("user",l,{expires:c}),r.isLoggedIn=!0,"1"==l.isAdmin?r.isAdmin=!0:r.isAdmin=!1}var i=this,c=a;i.isLoggedIn=null,i.login=function(r){e.login(r).then(function(e){token=e.data.token,id=0,username="",email="",c.getUser().then(function(e){id=e.data.id,username=e.data.username,email=e.data.email,o(token,id,username,email),i.isLoggedIn=!0},function(e){console.log(e),i.isLoggedIn=!1})},function(e){console.log(e),i.isLoggedIn=!1})},i.logout=function(){e.logout().then(function(e){r.isLoggedIn=!1,r.isAdmin=!1,i.user=null,i.isLoggedIn=null,t.remove("user"),n.go("home")},function(e){console.log(e)})},i.register=function(e){var r=CONSTANTS.API_BASE_URL+"/user";return $http.post(r,e)}}]),app.service("bandService",function(){function e(){return trackArrayCount++,trackArrayCount}function r(){return trackArrayCount--,trackArrayCount}function t(e){return trackIdArray.push(e),trackIdArray}function n(e){return index=trackIdArray.indexOf(e),index>-1&&trackIdArray.splice(index,1),trackIdArray}var a=this;trackArray=[],trackIdArray=[],trackArrayCount=0,a.getTrackArrayCount=function(){return trackArrayCount},a.getTrackIdArray=function(){return trackIdArray},a.addToTrackArray=function(r){return trackArray.push(r),e(),t(r.id),trackArray},a.removeFromTrackArray=function(e){return index=e.arrayObjectIndexOf(trackArray,e.id,"id"),index>-1&&trackArray.splice(index,1),r(),n(e.id),trackArray},a.getTrackArray=function(){return trackArray},a.testFunction=function(){alert("Test function called from inside service!")}}),app.service("filterService",["instrumentService",function(e){function r(){t.createSoloFilterData(),t.createMergedFilterData()}var t=this,n=e;t.createSoloFilterData=function(){t.soloFilterData={artist:"",title:""},angular.forEach(n.instruments,function(e,r){t.soloFilterData[e.id]=!0})},t.createMergedFilterData=function(){t.mergedFilterData={artist:"",title:""}},r()}]),app.service("instrumentService",["$http",function(e){function r(r,t){return t?"":t={},e.get(r,t)}var t=this;t.getInstruments=function(){var e=CONSTANTS.API_BASE_URL+"/instruments";t.instruments=r(e)},t.instruments=[{name:"Lead-guitar",id:1},{name:"Drum",id:2},{name:"Bass",id:3},{name:"Keys",id:4}]}]),app.service("mergedService",["$http",function(e){function r(r,t){return t?"":t={},e.get(r,t)}var t=this;t.getTracks=function(){var e=CONSTANTS.API_BASE_URL+"/mergedtracks";return r(e)},t.getTrackById=function(e){var t=CONSTANTS.API_BASE_URL+"/mergedtracks/"+e;return r(t)}}]),app.service("soloService",["$http",function(e){function r(r,t){return t?"":t={},e.get(r,t)}var t=this;t.getTracks=function(){var e=CONSTANTS.API_BASE_URL+"/tracks";return r(e)},t.getTrackById=function(e){var t=CONSTANTS.API_BASE_URL+"/tracks/"+e;return r(t)}}]),app.service("userService",["$http",function(e){var r=this;r.getUser=function(){return e.get(CONSTANTS.API_BASE_URL+"/user")},r.updateUser=function(r){return e.post(CONSTANTS.API_BASE_URL+"/user",r)}}]),app.directive("dcbBand",["bandService",function(e){return{restrict:"E",templateUrl:"app/directives/dcb-band/dcb-band.html",replace:!0,scope:{},controllerAs:"band",controller:function(){function e(){r.value="NewBand"}var r=this;e()}}}]),app.directive("dcbHeader",["bandService",function(e){return{restrict:"E",templateUrl:"app/directives/dcb-header/dcb-header.html",replace:!0,scope:{},controllerAs:"head",controller:["$scope","userService","authService","$auth","$rootScope",function(r,t,n,a,o){function i(){c.trackArray=s.getTrackArray,c.trackArrayCount=s.getTrackArrayCount,a.isAuthenticated()&&l.getUser().then(function(e){o.username=e.data.username})}var c=this,l=t,u=n,s=e;c.showLogin=function(){$("#login_modal").modal(),$("#login_modal").modal("open")},c.logout=function(){u.logout()},c.showRegister=function(){$("#register_modal").modal(),$("#register_modal").modal("open")},c.isAuthenticated=function(){return a.isAuthenticated()},i(),r.$watch(function(){return u.user},function(){c.user=u.user})}]}}]),app.directive("dcbLogin",function(){return{restrict:"E",templateUrl:"app/directives/dcb-login/dcb-login.html",replace:!0,scope:{},controllerAs:"login",controller:["$auth","$scope","$rootScope","userService","authService","$cookies",function(e,r,t,n,a,o){var i=this,c=a,l=document.getElementById("login-spinner"),u={lines:13,length:28,width:14,radius:42,scale:.4,corners:1,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner",top:"60%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};i.login=function(){var e=new Spinner(u).spin(l);i.loading=!0;var t={email:i.email,password:i.password};c.login(t);var n=r.$watch(function(){return c.isLoggedIn},function(){c.isLoggedIn&&(i.loading=!1,$("#login_modal").modal(),$("#login_modal").modal("close"),e.stop(),n()),c.isLoggedIn===!1&&(e.stop(),i.loading=!1,n())},!0)}}]}}),app.directive("dcbRegister",["userService",function(e){return{restrict:"E",templateUrl:"app/directives/dcb-register/dcb-register.html",replace:!0,scope:{},controllerAs:"register",controller:["$auth","$scope","$rootScope","userService","authService",function(e,r,t,n,a){var o=this,i=a,c=document.getElementById("register-spinner"),l={lines:13,length:28,width:14,radius:42,scale:.4,corners:1,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner",top:"60%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};o.register=function(){var t=new Spinner(l).spin(c);o.loading=!0;var n={username:o.username,email:o.email,password:o.password};e.signup(n).then(function(e){i.login(n);var a=r.$watch(function(){return i.isLoggedIn},function(){i.isLoggedIn&&(o.loading=!1,$("#register_modal").modal(),$("#register_modal").modal("close"),t.stop(),a()),i.isLoggedIn===!1&&(t.stop(),o.loading=!1,a())},!0)})["catch"](function(e){t.stop(),o.loading=!1,console.log(e)})}}]}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbmZpZy5qcyIsInJvdXRlcy5qcyIsImJhbmRDb250cm9sbGVyLmpzIiwiaG9tZUNvbnRyb2xsZXIuanMiLCJtZXJnZUNvbnRyb2xsZXIuanMiLCJtZXJnZWRDb250cm9sbGVyLmpzIiwicHJvZmlsZUNvbnRyb2xsZXIuanMiLCJzb2xvQ29udHJvbGxlci5qcyIsImJhbmRGaWx0ZXIuanMiLCJhdXRoU2VydmljZS5qcyIsImJhbmRTZXJ2aWNlLmpzIiwiZmlsdGVyU2VydmljZS5qcyIsImluc3RydW1lbnRTZXJ2aWNlLmpzIiwibWVyZ2VkU2VydmljZS5qcyIsInNvbG9TZXJ2aWNlLmpzIiwidXNlclNlcnZpY2UuanMiLCJkY2ItYmFuZC9kY2ItYmFuZC5qcyIsImRjYi1oZWFkZXIvZGNiLWhlYWRlci5qcyIsImRjYi1sb2dpbi9kY2ItbG9naW4uanMiLCJkY2ItcmVnaXN0ZXIvZGNiLXJlZ2lzdGVyLmpzIl0sIm5hbWVzIjpbImFwcCIsImFuZ3VsYXIiLCJtb2R1bGUiLCJDT05TVEFOVFMiLCJBUElfQkFTRV9VUkwiLCJjb25maWciLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiRhdXRoUHJvdmlkZXIiLCJsb2dpblVybCIsInNpZ251cFVybCIsIm90aGVyd2lzZSIsInN0YXRlIiwidXJsIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwiYmFuZFNlcnZpY2UiLCJfaW5pdCIsInZtIiwidHJhY2tBcnJheSIsImJhbmRTdmMiLCJnZXRUcmFja0FycmF5IiwidGhpcyIsImluc3RydW1lbnRTZXJ2aWNlIiwiZmlsdGVyU2VydmljZSIsImZpbHRlckRhdGEiLCJmbHRTdmMiLCJzb2xvRmlsdGVyRGF0YSIsIiRzY29wZSIsIm1lcmdlZFNlcnZpY2UiLCJnZXRNZXJnZWRUcmFja3MiLCJnZXRUcmFja3MiLCJ0aGVuIiwiZGF0YSIsIm1lcmdlZFRyYWNrcyIsImZpbHRlcmVkVHJhY2tzIiwiZmlsdGVyIiwiZm9yRWFjaCIsInRyYWNrIiwia2V5IiwibmV3VHJhY2siLCJBdWRpbyIsIm1lcmdlZFRyYWNrQXVkaW8iLCJpZCIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImdvb2RTZWFyY2giLCJhcnRpc3QiLCJuYW1lIiwibWF0Y2giLCJSZWdFeHAiLCJ0aXRsZSIsInNvbmduYW1lIiwicHVzaCIsImN1cnJlbnRBdWRpb1RyYWNrSWQiLCJtZXJnZWRGaWx0ZXJEYXRhIiwicGxheSIsInRyYWNrSWQiLCJwYXVzZSIsIiR3YXRjaCIsInRyYWNrMSIsInRyYWNrMiIsInVzZXJTZXJ2aWNlIiwidXNlclN2YyIsImdldFVzZXIiLCJ1c2VybmFtZSIsImVtYWlsIiwidGFyZ2V0IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIm9wdHMiLCJsaW5lcyIsImxlbmd0aCIsIndpZHRoIiwicmFkaXVzIiwic2NhbGUiLCJjb3JuZXJzIiwiY29sb3IiLCJvcGFjaXR5Iiwicm90YXRlIiwiZGlyZWN0aW9uIiwic3BlZWQiLCJ0cmFpbCIsImZwcyIsInpJbmRleCIsImNsYXNzTmFtZSIsInRvcCIsImxlZnQiLCJzaGFkb3ciLCJod2FjY2VsIiwicG9zaXRpb24iLCJ1cGRhdGUiLCJzcGlubmVyIiwiU3Bpbm5lciIsInNwaW4iLCJsb2FkaW5nIiwidXNlcmluZm8iLCJ1cGRhdGVVc2VyIiwic3RvcCIsInNvbG9TZXJ2aWNlIiwiZ2V0U29sb1RyYWNrcyIsInNvbG9TdmMiLCJzb2xvVHJhY2tzIiwic29sb1RyYWNrQXVkaW8iLCJpbnN0cnVtZW50X2lkIiwiaW5zdHJ1bWVudHMiLCJpbnN0U3ZjIiwiYmFuZFRyYWNrSWRBcnJheSIsImdldFRyYWNrSWRBcnJheSIsInRyYWNrQXJyYXlDb3VudCIsImdldFRyYWNrQXJyYXlDb3VudCIsImFkZFRvQmFuZCIsImFkZFRvVHJhY2tBcnJheSIsInJlbW92ZUZyb21CYW5kIiwicmVtb3ZlRnJvbVRyYWNrQXJyYXkiLCJsaXN0IiwicmV0dXJuVmFsdWUiLCJpbmRleCIsInNlcnZpY2UiLCIkYXV0aCIsIiRyb290U2NvcGUiLCIkY29va2llcyIsIiRzdGF0ZSIsImxvZ2luIiwidG9rZW4iLCJleHBpcmF0aW9uVGltZSIsIkRhdGUiLCJzZXRUaW1lIiwiZ2V0VGltZSIsInVzZXJEYXRhIiwidXNlcklkIiwic3ZjIiwidXNlciIsInB1dE9iamVjdCIsImV4cGlyZXMiLCJpc0xvZ2dlZEluIiwiaXNBZG1pbiIsImNyZWRlbnRpYWxzIiwibG9nb3V0IiwicmVtb3ZlIiwiZ28iLCJyZWdpc3RlciIsIiRodHRwIiwicG9zdCIsImluY3JlbWVudFRyYWNrQXJyYXlDb3VudCIsImRlY3JlbWVudFRyYWNrQXJyYXlDb3VudCIsImFkZFRvVHJhY2tJZEFycmF5IiwidHJhY2tJZEFycmF5IiwicmVtb3ZlRnJvbVRyYWNrSWRBcnJheSIsImluZGV4T2YiLCJzcGxpY2UiLCJhcnJheU9iamVjdEluZGV4T2YiLCJ0ZXN0RnVuY3Rpb24iLCJhbGVydCIsImNyZWF0ZVNvbG9GaWx0ZXJEYXRhIiwiY3JlYXRlTWVyZ2VkRmlsdGVyRGF0YSIsInZhbHVlIiwiZ2V0RGF0YSIsIm9wdGlvbnMiLCJnZXQiLCJnZXRJbnN0cnVtZW50cyIsImdldFRyYWNrQnlJZCIsImRpcmVjdGl2ZSIsInJlc3RyaWN0IiwicmVwbGFjZSIsInNjb3BlIiwiY29udHJvbGxlckFzIiwiYXV0aFNlcnZpY2UiLCJpc0F1dGhlbnRpY2F0ZWQiLCJhdXRoU3ZjIiwic2hvd0xvZ2luIiwiJCIsIm1vZGFsIiwic2hvd1JlZ2lzdGVyIiwicGFzc3dvcmQiLCJ1bnJlZ2lzdGVyIiwic2lnbnVwIiwicmVzcG9uc2UiXSwibWFwcGluZ3MiOiJBQUFBLEdBQUlBLEtBQU1DLFFBQVFDLE9BQU8sT0FDdkIsWUFDQSxhQUNBLGNDSEVDLFVBQWEsV0FFaEIsR0FBSUQsS0FJSixPQUZBQSxHQUFPRSxhQUFlLHdDQUVmRixJQ05SRixLQUFJSyxRQUFBLGlCQUFBLHFCQUFBLGdCQUFPLFNBQVNDLEVBQWdCQyxFQUFvQkMsR0FDdERBLEVBQWNDLFNBQWNOLFVBQVVDLGFB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WHBHLEVBQVdDLFNBQVNDLGVBQWUsb0JBRW5DQyxHQUNEQyxNQUFPLEdBQ1BDLE9BQVEsR0FDUkMsTUFBTyxHQUNQQyxPQUFRLEdBQ1JDLE1BQU8sR0FDUEMsUUFBUyxFQUNUQyxNQUFPLE9BQ1BDLFFBQVMsSUFDVEMsT0FBUSxFQUNSQyxVQUFXLEVBQ1hDLE1BQU8sRUFDUEMsTUFBTyxHQUNQQyxJQUFLLEdBQ0xDLE9BQVEsSUFDUkMsVUFBVyxVQUNYQyxJQUFLLE1BQ0xDLEtBQU0sTUFDTkMsUUFBUSxFQUNSQyxTQUFTLEVBQ1RDLFNBQVUsV0FLYnpFLEdBQUc0SCxTQUFXLFdBQ2IsR0FBSWpELEdBQVUsR0FBSUMsU0FBUXZCLEdBQU13QixLQUFLM0IsRUFDL0JsRCxHQUFHOEUsU0FBVyxDQUVwQixJQUFJcUMsSUFDRG5FLFNBQVVoRCxFQUFHZ0QsU0FDYkMsTUFBT2pELEVBQUdpRCxNQUNWNEcsU0FBVTdKLEVBQUc2SixTQUdoQnZELEdBQU15RCxPQUFPNUMsR0FBTXJHLEtBQUssU0FBU2tKLEdBRWhDUixFQUFROUMsTUFBTVMsRUFHZCxJQUFJMkMsR0FBYXBKLEVBQU9nQyxPQUN2QixXQUFjLE1BQU84RyxHQUFRbEMsWUFDN0IsV0FFSWtDLEVBQVFsQyxhQUVWdEgsRUFBRzhFLFNBQVUsRUFDUDRFLEVBQUUsbUJBQW1CQyxRQUMzQkQsRUFBRSxtQkFBbUJDLE1BQU0sU0FDckJoRixFQUFRTSxPQUNSNkUsS0FFSk4sRUFBUWxDLGNBQWUsSUFFekIzQyxFQUFRTSxPQUNGakYsRUFBRzhFLFNBQVUsRUFDYmdGLE9BRUwsS0F2Qkx4RCxTQXlCTyxTQUFTMEQsR0FFYnJGLEVBQVFNLE9BQ1JqRixFQUFHOEUsU0FBVSxFQUNabkQsUUFBUUMsSUFBSW9JIiwiZmlsZSI6InNjcmlwdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoXCJhcHBcIiwgW1xyXG5cdFx0XCJ1aS5yb3V0ZXJcIixcclxuXHRcdFwic2F0ZWxsaXplclwiLFxyXG5cdFx0XCJuZ0Nvb2tpZXNcIlxyXG5cdF0pOyIsInZhciBDT05TVEFOVFMgPSAoZnVuY3Rpb24gKCkge1xuXHRcblx0dmFyIG1vZHVsZSA9IHt9O1xuXG5cdG1vZHVsZS5BUElfQkFTRV9VUkwgPSBcImh0dHA6Ly9kaXNjb3ZlcmJhbmRhcGkuaW50L3B1YmxpYy9hcGlcIjtcblxuXHRyZXR1cm4gbW9kdWxlO1xufSgpKTsiLCJhcHAuY29uZmlnKGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIsICRhdXRoUHJvdmlkZXIpIHtcclxuICAkYXV0aFByb3ZpZGVyLmxvZ2luVXJsICAgID0gQ09OU1RBTlRTLkFQSV9CQVNFX1VSTCArICcvbG9naW4nO1xyXG4gICRhdXRoUHJvdmlkZXIuc2lnbnVwVXJsICAgPSBDT05TVEFOVFMuQVBJX0JBU0VfVVJMICsgJy9yZWdpc3Rlcic7XHJcbiAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZShcIi9cIik7XHJcblxyXG4gICRzdGF0ZVByb3ZpZGVyXHJcbiAgICAuc3RhdGUoJ2hvbWUnLCB7XHJcbiAgICAgIHVybDogXCIvXCIsXHJcbiAgICAgIHRlbXBsYXRlVXJsOiBcImFwcC9wYWdlcy9ob21lLmh0bWxcIixcclxuICAgICAgY29udHJvbGxlcjogXCJob21lQ29udHJvbGxlciBhcyBob21lXCJcclxuICAgIH0pXHJcbiAgXHQuc3RhdGUoJ3NvbG8nLCB7XHJcbiAgICAgIHVybDogXCIvc29sb1wiLFxyXG4gICAgICB0ZW1wbGF0ZVVybDogXCJhcHAvcGFnZXMvc29sby5odG1sXCIsXHJcbiAgICAgIGNvbnRyb2xsZXI6IFwic29sb0NvbnRyb2xsZXIgYXMgc29sb1wiXHJcbiAgICB9KVxyXG4gICAgLnN0YXRlKCdtZXJnZWQnLCB7XHJcbiAgICAgIHVybDogXCIvbWVyZ2VkXCIsXHJcbiAgICAgIHRlbXBsYXRlVXJsOiBcImFwcC9wYWdlcy9tZXJnZWQuaHRtbFwiLFxyXG4gICAgICBjb250cm9sbGVyOiBcIm1lcmdlZENvbnRyb2xsZXIgYXMgbWVyZ2VkXCJcclxuICAgIH0pXHJcbiAgICAuc3RhdGUoJ2JhbmQnLCB7XHJcbiAgICAgIHVybDogXCIvYmFuZFwiLFxyXG4gICAgICB0ZW1wbGF0ZVVybDogXCJhcHAvcGFnZXMvYmFuZC5odG1sXCIsXHJcbiAgICAgIGNvbnRyb2xsZXI6IFwiYmFuZENvbnRyb2xsZXIgYXMgYmFuZFwiXHJcbiAgICB9KVxyXG4gICAgLnN0YXRlKCdtZXJnZScsIHtcclxuICAgICAgdXJsOiBcIi9tZXJnZVwiLFxyXG4gICAgICB0ZW1wbGF0ZVVybDogXCJhcHAvcGFnZXMvbWVyZ2UuaHRtbFwiLFxyXG4gICAgICBjb250cm9sbGVyOiBcIm1lcmdlQ29udHJvbGxlciBhcyBtZXJnZVwiXHJcbiAgICB9KVxyXG4gICAgLnN0YXRlKCdwcm9maWxlJywge1xyXG4gICAgICB1cmw6IFwiL3Byb2ZpbGVcIixcclxuICAgICAgdGVtcGxhdGVVcmw6IFwiYXBwL3BhZ2VzL3Byb2ZpbGUuaHRtbFwiLFxyXG4gICAgICBjb250cm9sbGVyOiBcInByb2ZpbGVDb250cm9sbGVyIGFzIHByb2ZpbGVcIlxyXG4gICAgfSlcclxufSk7IiwiYXBwLmNvbnRyb2xsZXIoXCJiYW5kQ29udHJvbGxlclwiLCBmdW5jdGlvbihiYW5kU2VydmljZSkge1xyXG5cdFxyXG5cdHZhciB2bSA9IHRoaXM7XHJcblx0dmFyIGJhbmRTdmMgPSBiYW5kU2VydmljZTtcclxuXHJcblx0ZnVuY3Rpb24gX2luaXQoKSB7XHJcblx0XHR2bS50cmFja0FycmF5ID0gYmFuZFN2Yy5nZXRUcmFja0FycmF5O1xyXG5cdH1cclxuXHJcblx0X2luaXQoKTtcclxufSk7IiwiYXBwLmNvbnRyb2xsZXIoXCJob21lQ29udHJvbGxlclwiLCBmdW5jdGlvbihpbnN0cnVtZW50U2VydmljZSwgZmlsdGVyU2VydmljZSkge1xuXHRcblx0dmFyIHZtID0gdGhpcztcblx0dmFyIGluc3RTdmMgPSBpbnN0cnVtZW50U2VydmljZTtcblx0dmFyIGZsdFN2YyA9IGZpbHRlclNlcnZpY2U7XG5cblx0ZnVuY3Rpb24gX2luaXQoKSB7XG5cdFx0Ly9pbnN0U3ZjLmdldEluc3RydW1lbnRzKCk7XG5cblx0XHR2bS5maWx0ZXJEYXRhID0gZmx0U3ZjLnNvbG9GaWx0ZXJEYXRhO1xuXHR9XG5cblx0X2luaXQoKTtcbn0pOyIsImFwcC5jb250cm9sbGVyKFwibWVyZ2VDb250cm9sbGVyXCIsIGZ1bmN0aW9uKCkge1xuXHR2YXIgdm0gPSB0aGlzO1xuXG5cdGZ1bmN0aW9uIF9pbml0KCkge1xuXHRcdFxuXHR9XG5cblx0X2luaXQoKTtcbn0pOyIsImFwcC5jb250cm9sbGVyKFwibWVyZ2VkQ29udHJvbGxlclwiLCBmdW5jdGlvbigkc2NvcGUsIG1lcmdlZFNlcnZpY2UsIGZpbHRlclNlcnZpY2UpIHtcblx0XG5cdHZhciB2bSAgXHRcdD0gdGhpcztcblx0dmFyIG1nZFN2YyBcdFx0PSBtZXJnZWRTZXJ2aWNlO1xuXHR2YXIgZmx0U3ZjIFx0XHQ9IGZpbHRlclNlcnZpY2U7XG5cblx0Ly9Qcml2YXRlIGZ1bmN0aW9uc1xuXHRmdW5jdGlvbiBwbGF5QXVkaW9GaWxlKHRyYWNrKVxuXHR7XG5cdFx0dHJhY2sucGxheSgpO1xuXHR9XG5cblx0ZnVuY3Rpb24gZ2V0TWVyZ2VkVHJhY2tzKCkge1xuXHRcdG1lcmdlZFNlcnZpY2UuZ2V0VHJhY2tzKClcblx0XHRcdC50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcblx0XHRcdFx0XG5cdFx0XHRcdHZtLm1lcmdlZFRyYWNrcyA9IGRhdGEuZGF0YTtcblx0XHRcdFx0dm0uZmlsdGVyZWRUcmFja3MgPSB2bS5tZXJnZWRUcmFja3M7XG5cdFx0XHRcdGZpbHRlcigpO1xuXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaCh2bS5tZXJnZWRUcmFja3MsIGZ1bmN0aW9uKHRyYWNrLCBrZXkpIHtcblx0XHRcdFx0XHRcdC8vbmV3VHJhY2sgPSBuZXcgQXVkaW8odHJhY2suZmlsZV91cmwpO1xuXHRcdFx0XHRcdFx0bmV3VHJhY2sgPSBuZXcgQXVkaW8oXCJkaXN0L2F1ZGlvL0JlaGVtb3RoIC0gQ29ucXVlciBBbGwgLSBEcnVtLm1wM1wiKTtcblx0XHRcdFx0XHRcdHZtLm1lcmdlZFRyYWNrQXVkaW9bdHJhY2suaWRdID0gbmV3VHJhY2s7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHR9LCBmdW5jdGlvbihlcnJvcikge1xuXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycm9yKTtcblx0XHRcdH0pO1xuXHR9XG5cblx0ZnVuY3Rpb24gZmlsdGVyKCkge1xuXHRcdFxuXHRcdHZtLmZpbHRlcmVkVHJhY2tzID0gW107XG5cblx0XHRhbmd1bGFyLmZvckVhY2godm0ubWVyZ2VkVHJhY2tzLCBmdW5jdGlvbih0cmFjaywga2V5KSB7XG5cblx0XHRcdGdvb2RTZWFyY2ggPSB0cnVlO1xuXG5cdFx0XHRpZighdm0uZmlsdGVyRGF0YS5hcnRpc3QgPT0gXCJcIiAmJiAhdHJhY2suYXJ0aXN0Lm5hbWUubWF0Y2gobmV3IFJlZ0V4cCh2bS5maWx0ZXJEYXRhLmFydGlzdCwgXCJpXCIpKSlcblx0XHRcdHtcblx0XHRcdFx0Z29vZFNlYXJjaCA9IGZhbHNlO1xuXHRcdFx0fVxuXG5cdFx0XHRpZighdm0uZmlsdGVyRGF0YS50aXRsZSA9PSBcIlwiICYmICF0cmFjay5zb25nbmFtZS5tYXRjaChuZXcgUmVnRXhwKHZtLmZpbHRlckRhdGEudGl0bGUsIFwiaVwiKSkpXG5cdFx0XHR7XG5cdFx0XHRcdGdvb2RTZWFyY2ggPSBmYWxzZTtcblx0XHRcdH1cblxuXG5cdFx0XHRpZihnb29kU2VhcmNoKVxuXHRcdFx0e1xuXHRcdFx0XHR2bS5maWx0ZXJlZFRyYWNrcy5wdXNoKHRyYWNrKTtcblx0XHRcdH1cblx0XHR9KVxuXHR9XG5cblx0ZnVuY3Rpb24gX2luaXQoKSB7XG5cdFx0dm0ubWVyZ2VkVHJhY2tBdWRpbyA9IFtdO1xuXHRcdHZtLmN1cnJlbnRBdWRpb1RyYWNrSWQgPSBcIlwiO1xuXG5cdFx0Z2V0TWVyZ2VkVHJhY2tzKCk7XG5cdFx0dm0uZmlsdGVyRGF0YSA9IGZsdFN2Yy5tZXJnZWRGaWx0ZXJEYXRhO1xuXHR9XG5cblx0Ly9WbSBmdW5jdGlvbnNcblx0dm0ucGxheSA9IGZ1bmN0aW9uKHRyYWNrSWQpIHtcblxuXHRcdGlmKHZtLmN1cnJlbnRBdWRpb1RyYWNrSWQgIT0gXCJcIikge1xuXHRcdFx0dm0ucGF1c2Uodm0uY3VycmVudEF1ZGlvVHJhY2tJZCk7XG5cdFx0fVxuXG5cdFx0dm0uY3VycmVudEF1ZGlvVHJhY2tJZCA9IHRyYWNrSWQ7XG5cdFx0dm0ubWVyZ2VkVHJhY2tBdWRpb1t0cmFja0lkXS5wbGF5KCk7XG5cdH1cblxuXHR2bS5wYXVzZSA9IGZ1bmN0aW9uKHRyYWNrSWQpIHtcblx0XHR2bS5tZXJnZWRUcmFja0F1ZGlvW3RyYWNrSWRdLnBhdXNlKCk7XG5cdFx0dm0uY3VycmVudEF1ZGlvVHJhY2tJZCA9IFwiXCI7XG5cdH1cblxuXHQvL1dhdGNoZXNcblx0JHNjb3BlLiR3YXRjaChcblx0XHRmdW5jdGlvbiAoKSB7IHJldHVybiB2bS5maWx0ZXJEYXRhIH0sIFxuXHRcdGZ1bmN0aW9uICgpIHtcblxuXHRcdFx0aWYodm0uZmlsdGVyRGF0YSkgXG5cdFx0XHR7XG5cdFx0XHRcdGZpbHRlcigpO1xuXHRcdFx0fVxuXHRcdH0sIHRydWUpO1xuXG5cblxuXHR2bS50cmFjazEgPSBuZXcgQXVkaW8oXCJkaXN0L2F1ZGlvL0JlaGVtb3RoIC0gQ29ucXVlciBBbGwgLSBEcnVtLm1wM1wiKTtcblx0dm0udHJhY2syID0gbmV3IEF1ZGlvKFwiZGlzdC9hdWRpby9CZWhlbW90aCAtIENvbnF1ZXIgQWxsIC0gR3VpdGFyLm1wM1wiKTtcblxuXG5cdF9pbml0KCk7XG59KTsiLCJhcHAuY29udHJvbGxlcihcInByb2ZpbGVDb250cm9sbGVyXCIsIGZ1bmN0aW9uKHVzZXJTZXJ2aWNlKSB7XHJcblx0XHJcblx0dmFyIHZtIFx0XHQ9IHRoaXM7XHJcblx0dmFyIHVzZXJTdmMgPSB1c2VyU2VydmljZTtcclxuXHR2YXIgdGFyZ2V0IFx0PSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXBkYXRlLXByb2ZpbGUtc3Bpbm5lcicpO1xyXG5cclxuXHR2YXIgb3B0cyA9IHtcclxuXHRcdFx0bGluZXM6IDEzIC8vIFRoZSBudW1iZXIgb2YgbGluZXMgdG8gZHJhd1xyXG5cdFx0LCBsZW5ndGg6IDI4IC8vIFRoZSBsZW5ndGggb2YgZWFjaCBsaW5lXHJcblx0XHQsIHdpZHRoOiAxMiAvLyBUaGUgbGluZSB0aGlja25lc3NcclxuXHRcdCwgcmFkaXVzOiA0MiAvLyBUaGUgcmFkaXVzIG9mIHRoZSBpbm5lciBjaXJjbGVcclxuXHRcdCwgc2NhbGU6IDAuMTUgLy8gU2NhbGVzIG92ZXJhbGwgc2l6ZSBvZiB0aGUgc3Bpbm5lclxyXG5cdFx0LCBjb3JuZXJzOiAxIC8vIENvcm5lciByb3VuZG5lc3MgKDAuLjEpXHJcblx0XHQsIGNvbG9yOiAnIzAwMCcgLy8gI3JnYiBvciAjcnJnZ2JiIG9yIGFycmF5IG9mIGNvbG9yc1xyXG5cdFx0LCBvcGFjaXR5OiAwLjI1IC8vIE9wYWNpdHkgb2YgdGhlIGxpbmVzXHJcblx0XHQsIHJvdGF0ZTogMCAvLyBUaGUgcm90YXRpb24gb2Zmc2V0XHJcblx0XHQsIGRpcmVjdGlvbjogMSAvLyAxOiBjbG9ja3dpc2UsIC0xOiBjb3VudGVyY2xvY2t3aXNlXHJcblx0XHQsIHNwZWVkOiAxIC8vIFJvdW5kcyBwZXIgc2Vjb25kXHJcblx0XHQsIHRyYWlsOiA2MCAvLyBBZnRlcmdsb3cgcGVyY2VudGFnZVxyXG5cdFx0LCBmcHM6IDIwIC8vIEZyYW1lcyBwZXIgc2Vjb25kIHdoZW4gdXNpbmcgc2V0VGltZW91dCgpIGFzIGEgZmFsbGJhY2sgZm9yIENTU1xyXG5cdFx0LCB6SW5kZXg6IDJlOSAvLyBUaGUgei1pbmRleCAoZGVmYXVsdHMgdG8gMjAwMDAwMDAwMClcclxuXHRcdCwgY2xhc3NOYW1lOiAnc3Bpbm5lcicgLy8gVGhlIENTUyBjbGFzcyB0byBhc3NpZ24gdG8gdGhlIHNwaW5uZXJcclxuXHRcdCwgdG9wOiAnODklJyAvLyBUb3AgcG9zaXRpb24gcmVsYXRpdmUgdG8gcGFyZW50XHJcblx0XHQsIGxlZnQ6ICcyNS41JScgLy8gTGVmdCBwb3NpdGlvbiByZWxhdGl2ZSB0byBwYXJlbnRcclxuXHRcdCwgc2hhZG93OiBmYWxzZSAvLyBXaGV0aGVyIHRvIHJlbmRlciBhIHNoYWRvd1xyXG5cdFx0LCBod2FjY2VsOiBmYWxzZSAvLyBXaGV0aGVyIHRvIHVzZSBoYXJkd2FyZSBhY2NlbGVyYXRpb25cclxuXHRcdCwgcG9zaXRpb246ICdhYnNvbHV0ZScgLy8gRWxlbWVudCBwb3NpdGlvbmluZ1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gX2luaXQoKSB7XHJcblx0XHR1c2VyU3ZjLmdldFVzZXIoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XHJcblx0XHRcdHZtLnVzZXJuYW1lID0gZGF0YS5kYXRhLnVzZXJuYW1lO1xyXG5cdFx0XHR2bS5lbWFpbCBcdD0gZGF0YS5kYXRhLmVtYWlsO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHR2bS51cGRhdGUgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBzcGlubmVyID0gbmV3IFNwaW5uZXIob3B0cykuc3Bpbih0YXJnZXQpO1xyXG5cdCAgICB2bS5sb2FkaW5nIFx0PSB0cnVlO1xyXG5cclxuXHRcdHZhciB1c2VyaW5mbyA9IHtcclxuICAgICAgICAgICAgdXNlcm5hbWU6IHZtLnVzZXJuYW1lLFxyXG4gICAgICAgICAgICBlbWFpbDogdm0uZW1haWxcclxuICAgICAgICB9XHJcblxyXG5cdFx0dXNlclN2Yy51cGRhdGVVc2VyKHVzZXJpbmZvKVxyXG5cdFx0XHQudGhlbihmdW5jdGlvbihkYXRhKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0c3Bpbm5lci5zdG9wKCk7XHJcblx0XHRcdFx0dm0ubG9hZGluZyA9IGZhbHNlO1xyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnJvcilcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHNwaW5uZXIuc3RvcCgpO1xyXG5cdFx0XHRcdHZtLmxvYWRpbmcgPSBmYWxzZTtcclxuXHRcdFx0fSk7XHJcblx0fVxyXG5cclxuXHRfaW5pdCgpO1xyXG59KTsiLCJhcHAuY29udHJvbGxlcihcInNvbG9Db250cm9sbGVyXCIsIGZ1bmN0aW9uKCRzY29wZSwgYmFuZFNlcnZpY2UsIHNvbG9TZXJ2aWNlLCBpbnN0cnVtZW50U2VydmljZSwgZmlsdGVyU2VydmljZSkge1xuXHRcblx0dmFyIHZtID0gdGhpcztcblx0dmFyIGJhbmRTdmMgPSBiYW5kU2VydmljZTtcblx0dmFyIHNvbG9TdmMgPSBzb2xvU2VydmljZTtcblx0dmFyIGluc3RTdmMgPSBpbnN0cnVtZW50U2VydmljZTtcblx0dmFyIGZsdFN2YyA9IGZpbHRlclNlcnZpY2U7XG5cblx0Ly9Qcml2YXRlIGZ1bmN0aW9uc1xuXHRmdW5jdGlvbiBwbGF5QXVkaW9GaWxlKHRyYWNrKVxuXHR7XG5cdFx0dHJhY2sucGxheSgpO1xuXHR9XG5cblx0ZnVuY3Rpb24gZ2V0U29sb1RyYWNrcygpXG5cdHtcblx0XHRzb2xvU3ZjLmdldFRyYWNrcygpXG5cdFx0XHQudGhlbihmdW5jdGlvbihkYXRhKVxuXHRcdFx0e1xuXHRcdFx0XHR2bS5zb2xvVHJhY2tzID0gZGF0YS5kYXRhO1xuXHRcdFx0XHR2bS5maWx0ZXJlZFRyYWNrcyA9IHZtLnNvbG9UcmFja3M7XG5cdFx0XHRcdGZpbHRlcigpO1xuXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaCh2bS5zb2xvVHJhY2tzLCBmdW5jdGlvbih0cmFjaywga2V5KSB7XG5cdFx0XHRcdFx0XHQvL25ld1RyYWNrID0gbmV3IEF1ZGlvKHRyYWNrLmZpbGVfdXJsKTtcblx0XHRcdFx0XHRcdG5ld1RyYWNrID0gbmV3IEF1ZGlvKFwiZGlzdC9hdWRpby9CZWhlbW90aCAtIENvbnF1ZXIgQWxsIC0gRHJ1bS5tcDNcIik7XG5cdFx0XHRcdFx0XHR2bS5zb2xvVHJhY2tBdWRpb1t0cmFjay5pZF0gPSBuZXdUcmFjaztcblx0XHRcdFx0XHR9KTtcblx0XHRcdFxuXHRcdFx0fSwgZnVuY3Rpb24oZXJyb3IpXG5cdFx0XHR7XG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycm9yKTtcblx0XHRcdH0pO1xuXHR9XG5cblx0ZnVuY3Rpb24gZmlsdGVyKClcblx0e1xuXHRcdHZtLmZpbHRlcmVkVHJhY2tzID0gW107XG5cblx0XHRhbmd1bGFyLmZvckVhY2godm0uc29sb1RyYWNrcywgZnVuY3Rpb24odHJhY2ssIGtleSlcblx0XHR7XG5cdFx0XHQvL2NvbnNvbGUubG9nKHRyYWNrKTtcblx0XHRcdGdvb2RTZWFyY2ggPSB0cnVlO1xuXG5cdFx0XHRpZighdm0uZmlsdGVyRGF0YS5hcnRpc3QgPT0gXCJcIiAmJiAhdHJhY2suYXJ0aXN0Lm5hbWUubWF0Y2gobmV3IFJlZ0V4cCh2bS5maWx0ZXJEYXRhLmFydGlzdCwgXCJpXCIpKSlcblx0XHRcdHtcblx0XHRcdFx0Z29vZFNlYXJjaCA9IGZhbHNlO1xuXHRcdFx0fVxuXG5cdFx0XHRpZighdm0uZmlsdGVyRGF0YS50aXRsZSA9PSBcIlwiICYmICF0cmFjay5zb25nbmFtZS5tYXRjaChuZXcgUmVnRXhwKHZtLmZpbHRlckRhdGEudGl0bGUsIFwiaVwiKSkpXG5cdFx0XHR7XG5cdFx0XHRcdGdvb2RTZWFyY2ggPSBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0aWYoIXZtLmZpbHRlckRhdGFbdHJhY2suaW5zdHJ1bWVudF9pZF0pXG5cdFx0XHR7XG5cdFx0XHRcdGdvb2RTZWFyY2ggPSBmYWxzZTtcblx0XHRcdH1cblxuXG5cdFx0XHRpZihnb29kU2VhcmNoKVxuXHRcdFx0e1xuXHRcdFx0XHR2bS5maWx0ZXJlZFRyYWNrcy5wdXNoKHRyYWNrKTtcblx0XHRcdH1cblx0XHRcdC8vY29uc29sZS5sb2codm0uZmlsdGVyZWRUcmFja3MpO1xuXHRcdH0pO1xuXHR9XG5cblx0LypmdW5jdGlvbiBhcnJheU9iamVjdEluZGV4T2YobXlBcnJheSwgc2VhcmNoVGVybSwgcHJvcGVydHkpIHtcbiAgICBcdFxuICAgIFx0Zm9yKHZhciBpID0gMCwgbGVuID0gbXlBcnJheS5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICBcdGlmIChteUFycmF5W2ldW3Byb3BlcnR5XSA9PT0gc2VhcmNoVGVybSkgcmV0dXJuIGk7XG4gICAgXHR9XG5cbiAgICBcdHJldHVybiAtMTtcblx0fSovXG5cblx0ZnVuY3Rpb24gX2luaXQoKSB7XG5cdFx0dm0uc29sb1RyYWNrQXVkaW8gPSBbXTtcblx0XHR2bS5jdXJyZW50QXVkaW9UcmFja0lkID0gXCJcIjtcblxuXHRcdGdldFNvbG9UcmFja3MoKTtcblx0XHR2bS5pbnN0cnVtZW50cyA9IGluc3RTdmMuaW5zdHJ1bWVudHM7XG5cdFx0dm0uZmlsdGVyRGF0YSA9IGZsdFN2Yy5zb2xvRmlsdGVyRGF0YTtcblx0XHR2bS50cmFja0FycmF5ID0gYmFuZFN2Yy5nZXRUcmFja0FycmF5O1xuXHRcdHZtLmJhbmRUcmFja0lkQXJyYXkgPSBiYW5kU3ZjLmdldFRyYWNrSWRBcnJheTtcblx0XHR2bS50cmFja0FycmF5Q291bnQgPSBiYW5kU3ZjLmdldFRyYWNrQXJyYXlDb3VudDtcblxuXHRcdC8qYW5ndWxhci5mb3JFYWNoKGJhbmRTdmMudHJhY2tBcnJheSwgZnVuY3Rpb24odHJhY2ssIGtleSkge1xuXHRcdFx0dm0uYmFuZFRyYWNrSWRBcnJheS5wdXNoKHRyYWNrLmlkKTtcblx0XHR9KTsqL1xuXG5cdFx0Ly92bS50cmFjazEucGxheSgpO1xuXHRcdC8vc2V0VGltZW91dChmdW5jdGlvbigpe3BsYXlBdWRpb0ZpbGUodm0udHJhY2syKX0sIDQwMCk7XG5cdH1cblxuXHQvL1ZtIGZ1bmN0aW9uc1xuXHR2bS5hZGRUb0JhbmQgPSBmdW5jdGlvbih0cmFjaykge1xuXG5cdFx0YmFuZFN2Yy5hZGRUb1RyYWNrQXJyYXkodHJhY2spO1xuXHRcdC8qdm0uYmFuZFRyYWNrSWRBcnJheSA9IFtdO1xuXG5cdFx0YmFuZFN2Yy50cmFja0FycmF5LnB1c2godHJhY2spO1xuXHRcdGJhbmRTdmMudHJhY2tBcnJheUNvdW50ICsrO1xuXHRcdGFuZ3VsYXIuZm9yRWFjaChiYW5kU3ZjLnRyYWNrQXJyYXksIGZ1bmN0aW9uKHRyYWNrLCBrZXkpIHtcblx0XHRcdHZtLmJhbmRUcmFja0lkQXJyYXkucHVzaCh0cmFjay5pZCk7XG5cdFx0fSk7Ki9cblxuXHRcdGNvbnNvbGUubG9nKFwiVHJhY2sgYWRkZWQgdG8gbmV3IGJhbmQ6IFwiICsgdHJhY2spO1xuXHRcdC8vY29uc29sZS5sb2coYmFuZFN2Yy50cmFja0FycmF5KTtcblx0XHQvL2NvbnNvbGUubG9nKHZtLmJhbmRUcmFja0lkQXJyYXkpO1xuXHRcdC8vY29uc29sZS5sb2codm0udHJhY2tBcnJheUNvdW50KCkpO1xuXHRcdC8vY29uc29sZS5sb2codm0uYmFuZFRyYWNrSWRBcnJheSgpKTtcblx0fVxuXG5cdHZtLnJlbW92ZUZyb21CYW5kID0gZnVuY3Rpb24odHJhY2spIHtcblx0XHRcblx0XHRiYW5kU3ZjLnJlbW92ZUZyb21UcmFja0FycmF5KHRyYWNrKTtcblx0XHQvKmluZGV4ID0gYXJyYXlPYmplY3RJbmRleE9mKGJhbmRTdmMudHJhY2tBcnJheSwgdHJhY2suaWQsIFwiaWRcIik7XG5cdFx0aWYgKGluZGV4ID4gLTEpIHtcblx0XHRcdGJhbmRTdmMudHJhY2tBcnJheS5zcGxpY2UoaW5kZXgsIDEpO1xuXHRcdFx0YmFuZFN2Yy50cmFja0FycmF5Q291bnQgLS07XG5cdFx0XHR2bS5iYW5kVHJhY2tBcnJheSA9IGJhbmRTdmMudHJhY2tBcnJheTtcblxuXHRcdFx0aW50SW5kZXggPSB2bS5iYW5kVHJhY2tJZEFycmF5LmluZGV4T2YodHJhY2suaWQpO1xuXHRcdFx0aWYgKGludEluZGV4ID4gLTEpIHtcblx0XHRcdFx0dm0uYmFuZFRyYWNrSWRBcnJheS5zcGxpY2UoaW50SW5kZXgsIDEpO1xuXHRcdFx0fVxuXHRcdH0qL1xuXG5cdFx0Y29uc29sZS5sb2coXCJUcmFjayByZW1vdmVkIGZyb20gbmV3IGJhbmQ6IFwiICsgdHJhY2spO1xuXHRcdC8vY29uc29sZS5sb2coYmFuZFN2Yy50cmFja0FycmF5KTtcblx0fVxuXG5cdHZtLnBsYXkgPSBmdW5jdGlvbih0cmFja0lkKSB7XG5cblx0XHRpZih2bS5jdXJyZW50QXVkaW9UcmFja0lkICE9IFwiXCIpIHtcblx0XHRcdHZtLnBhdXNlKHZtLmN1cnJlbnRBdWRpb1RyYWNrSWQpO1xuXHRcdH1cblxuXHRcdHZtLmN1cnJlbnRBdWRpb1RyYWNrSWQgPSB0cmFja0lkO1xuXHRcdHZtLnNvbG9UcmFja0F1ZGlvW3RyYWNrSWRdLnBsYXkoKTtcblx0fVxuXG5cdHZtLnBhdXNlID0gZnVuY3Rpb24odHJhY2tJZCkge1xuXHRcdHZtLnNvbG9UcmFja0F1ZGlvW3RyYWNrSWRdLnBhdXNlKCk7XG5cdFx0dm0uY3VycmVudEF1ZGlvVHJhY2tJZCA9IFwiXCI7XG5cdH1cblxuXHQvL1dhdGNoZXNcblx0JHNjb3BlLiR3YXRjaChcblx0XHRmdW5jdGlvbiAoKSB7IHJldHVybiB2bS5maWx0ZXJEYXRhIH0sIFxuXHRcdGZ1bmN0aW9uICgpIHtcblxuXHRcdFx0aWYodm0uZmlsdGVyRGF0YSkgXG5cdFx0XHR7XG5cdFx0XHRcdGZpbHRlcigpO1xuXHRcdFx0fVxuXHRcdH0sIHRydWUpO1xuXG5cblxuXHR2bS50cmFjazEgPSBuZXcgQXVkaW8oXCJkaXN0L2F1ZGlvL0JlaGVtb3RoIC0gQ29ucXVlciBBbGwgLSBEcnVtLm1wM1wiKTtcblx0dm0udHJhY2syID0gbmV3IEF1ZGlvKFwiZGlzdC9hdWRpby9CZWhlbW90aCAtIENvbnF1ZXIgQWxsIC0gR3VpdGFyLm1wM1wiKTtcblxuXG5cdF9pbml0KCk7XG59KTsiLCJhcHAuZmlsdGVyKFwiYmFuZFwiLCBmdW5jdGlvbigpIHtcblx0cmV0dXJuIGZ1bmN0aW9uKHRyYWNrSWQsIGxpc3QpIHtcblx0XHR2YXIgcmV0dXJuVmFsdWUgPSBmYWxzZTtcblx0XHRcblx0XHRhbmd1bGFyLmZvckVhY2gobGlzdCwgZnVuY3Rpb24oaWQsIGluZGV4KSB7XG5cdFx0XHRpZihpZCA9PSB0cmFja0lkKSB7XG5cdFx0XHRcdHJldHVyblZhbHVlID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRyZXR1cm4gcmV0dXJuVmFsdWU7XG5cdH1cbn0pOyIsImFwcC5zZXJ2aWNlKFwiYXV0aFNlcnZpY2VcIiwgZnVuY3Rpb24gKCRhdXRoLCAkcm9vdFNjb3BlLCAkY29va2llcywgJHN0YXRlLCB1c2VyU2VydmljZSkge1xyXG5cdFxyXG5cdHZhciBzdmMgXHRcdD0gdGhpcztcclxuXHR2YXIgdXNlclN2YyBcdD0gdXNlclNlcnZpY2U7XHJcblxyXG5cdHN2Yy5pc0xvZ2dlZEluIFx0PSBudWxsO1xyXG5cclxuXHQvL1ByaXZhdGUgZnVuY3Rpb25zXHJcblx0ZnVuY3Rpb24gbG9naW4gKHRva2VuLCBpZCwgdXNlcm5hbWUsIGVtYWlsKSB7XHJcblxyXG5cdFx0dmFyIGV4cGlyYXRpb25UaW1lID0gbmV3IERhdGUoKTtcclxuXHRcdGV4cGlyYXRpb25UaW1lID0gZXhwaXJhdGlvblRpbWUuc2V0VGltZShleHBpcmF0aW9uVGltZS5nZXRUaW1lKCkgKyAodG9rZW5bXCJleHBpcmVzX2luXCJdICogMTAwMCkpO1xyXG5cdFx0ZXhwaXJhdGlvblRpbWUgPSBuZXcgRGF0ZShleHBpcmF0aW9uVGltZSk7XHJcblxyXG5cdFx0dmFyIHVzZXJEYXRhID0ge1xyXG5cclxuXHRcdFx0dG9rZW46IHRva2VuLFxyXG5cdFx0XHR1c2VySWQ6IGlkLFxyXG5cdFx0XHR1c2VybmFtZTogdXNlcm5hbWUsXHJcblx0XHRcdGVtYWlsOiBlbWFpbCxcclxuXHRcdFx0Ly9pc0FkbWluOiBkYXRhLmRhdGEuaXNBZG1pblxyXG5cdFx0fVxyXG5cclxuXHRcdC8vY29uc29sZS5sb2codXNlckRhdGEudG9rZW4pO1xyXG5cclxuXHRcdHN2Yy51c2VyID0gdXNlckRhdGE7XHJcblxyXG5cdFx0JGNvb2tpZXMucHV0T2JqZWN0KFwidXNlclwiLCB1c2VyRGF0YSwgeyBleHBpcmVzOiBleHBpcmF0aW9uVGltZSB9KTtcclxuXHRcdCRyb290U2NvcGUuaXNMb2dnZWRJbiA9IHRydWU7XHJcblx0XHRcclxuXHRcdC8vQ2hlY2sgaWYgcmV0dXJuZWQgdXNlciBpcyBBZG1pblxyXG5cdFx0dXNlckRhdGEuaXNBZG1pbiA9PSBcIjFcIiA/ICRyb290U2NvcGUuaXNBZG1pbiA9IHRydWUgOiAkcm9vdFNjb3BlLmlzQWRtaW4gPSBmYWxzZTtcclxuXHR9XHJcblxyXG5cdC8vU3ZjIGZ1bmN0aW9uc1xyXG5cdHN2Yy5sb2dpbiA9IGZ1bmN0aW9uIChjcmVkZW50aWFscykge1xyXG5cclxuXHRcdCRhdXRoLmxvZ2luKGNyZWRlbnRpYWxzKS50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICBcdC8vIEF1dGhlbnRpY2F0aW9uIHN1Y2Nlc3NcclxuICAgICAgICBcdHRva2VuIFx0XHQ9IGRhdGEuZGF0YS50b2tlbjtcclxuICAgICAgICBcdGlkIFx0XHRcdD0gMDtcclxuICAgICAgICBcdHVzZXJuYW1lIFx0PSBcIlwiO1xyXG4gICAgICAgIFx0ZW1haWwgXHRcdD0gXCJcIjtcclxuXHJcblx0XHRcdHVzZXJTdmMuZ2V0VXNlcigpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuXHRcdFx0XHRpZCBcdFx0XHQ9IGRhdGEuZGF0YS5pZDtcclxuXHRcdFx0XHR1c2VybmFtZSBcdD0gZGF0YS5kYXRhLnVzZXJuYW1lO1xyXG5cdFx0XHRcdGVtYWlsIFx0XHQ9IGRhdGEuZGF0YS5lbWFpbDtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRsb2dpbih0b2tlbiwgaWQsIHVzZXJuYW1lLCBlbWFpbCk7XHJcblx0XHRcdFx0c3ZjLmlzTG9nZ2VkSW4gPSB0cnVlO1xyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnJvcikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycm9yKTtcclxuXHRcdFx0XHRzdmMuaXNMb2dnZWRJbiA9IGZhbHNlO1xyXG5cdFx0XHR9KTtcclxuICAgICAgICB9LCBcclxuICAgICAgICBmdW5jdGlvbihlcnJvcil7XHJcbiAgICAgICAgXHQvLyBBdXRoZW50aWNhdGlvbiBmYWlsZWRcclxuICAgICAgICBcdGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgICBcdHN2Yy5pc0xvZ2dlZEluID0gZmFsc2U7IFxyXG4gICAgICAgIH0pO1xyXG5cdH1cclxuXHJcblx0c3ZjLmxvZ291dCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcblx0XHQkYXV0aC5sb2dvdXQoKVxyXG5cdFx0XHQudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG5cclxuXHRcdFx0XHQkcm9vdFNjb3BlLmlzTG9nZ2VkSW4gPSBmYWxzZTtcclxuXHRcdFx0XHQkcm9vdFNjb3BlLmlzQWRtaW4gPSBmYWxzZTtcclxuXHRcdFx0XHRzdmMudXNlciA9IG51bGw7XHJcblx0XHRcdFx0c3ZjLmlzTG9nZ2VkSW4gPSBudWxsO1xyXG5cclxuXHRcdFx0XHQkY29va2llcy5yZW1vdmUoXCJ1c2VyXCIpO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdCRzdGF0ZS5nbyhcImhvbWVcIik7XHJcblx0XHRcdH0sIGZ1bmN0aW9uIChlcnJvcikge1xyXG5cclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnJvcik7XHJcblx0XHRcdH0pXHJcblx0fVxyXG5cclxuXHRzdmMucmVnaXN0ZXIgPSBmdW5jdGlvbiAodXNlcikge1xyXG5cclxuXHRcdHZhciB1cmwgPSBDT05TVEFOVFMuQVBJX0JBU0VfVVJMICsgXCIvdXNlclwiO1xyXG5cclxuXHRcdHJldHVybiAkaHR0cC5wb3N0KHVybCwgdXNlcik7XHJcblx0fVxyXG59KTsiLCJhcHAuc2VydmljZShcImJhbmRTZXJ2aWNlXCIsIGZ1bmN0aW9uKCkge1xyXG5cdFxyXG5cdHZhciBzdmMgPSB0aGlzO1xyXG5cclxuXHR0cmFja0FycmF5ID0gW107XHJcblx0dHJhY2tJZEFycmF5ID0gW107XHJcblx0dHJhY2tBcnJheUNvdW50ID0gMDtcclxuXHJcblx0Ly9Qcml2YXRlIGZ1bmN0aW9uc1xyXG5cdGZ1bmN0aW9uIGFycmF5T2JqZWN0SW5kZXhPZihteUFycmF5LCBzZWFyY2hUZXJtLCBwcm9wZXJ0eSkge1xyXG4gICAgXHRcclxuICAgIFx0Zm9yKHZhciBpID0gMCwgbGVuID0gbXlBcnJheS5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICAgIFx0aWYgKG15QXJyYXlbaV1bcHJvcGVydHldID09PSBzZWFyY2hUZXJtKSByZXR1cm4gaTtcclxuICAgIFx0fVxyXG5cclxuICAgIFx0cmV0dXJuIC0xO1xyXG5cdH1cclxuXHQvL1RyYWNrQXJyYXlDb3VudFxyXG5cdGZ1bmN0aW9uIGluY3JlbWVudFRyYWNrQXJyYXlDb3VudCgpIHtcclxuXHRcdHRyYWNrQXJyYXlDb3VudCArKztcclxuXHRcdHJldHVybiB0cmFja0FycmF5Q291bnQ7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBkZWNyZW1lbnRUcmFja0FycmF5Q291bnQoKSB7XHJcblx0XHR0cmFja0FycmF5Q291bnQgLS07XHJcblx0XHRyZXR1cm4gdHJhY2tBcnJheUNvdW50O1xyXG5cdH1cclxuXHJcblx0Ly9UcmFja0lkQXJyYXlcclxuXHRmdW5jdGlvbiBhZGRUb1RyYWNrSWRBcnJheSh0cmFja0lkKSB7XHJcblx0XHR0cmFja0lkQXJyYXkucHVzaCh0cmFja0lkKTtcclxuXHRcdHJldHVybiB0cmFja0lkQXJyYXk7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiByZW1vdmVGcm9tVHJhY2tJZEFycmF5KHRyYWNrSWQpIHtcclxuXHRcdGluZGV4ID0gdHJhY2tJZEFycmF5LmluZGV4T2YodHJhY2tJZCk7XHJcblx0XHRpZihpbmRleCA+IC0xKSB7XHJcblx0XHRcdHRyYWNrSWRBcnJheS5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0cmFja0lkQXJyYXk7XHJcblx0fVxyXG5cclxuXHQvL1N2YyBmdW5jdGlvbnNcclxuXHRzdmMuZ2V0VHJhY2tBcnJheUNvdW50ID0gZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gdHJhY2tBcnJheUNvdW50O1xyXG5cdH1cclxuXHJcblx0c3ZjLmdldFRyYWNrSWRBcnJheSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIHRyYWNrSWRBcnJheTtcclxuXHR9XHJcblxyXG5cclxuXHRzdmMuYWRkVG9UcmFja0FycmF5ID0gZnVuY3Rpb24odHJhY2spIHtcclxuXHRcdHRyYWNrQXJyYXkucHVzaCh0cmFjayk7XHJcblx0XHRpbmNyZW1lbnRUcmFja0FycmF5Q291bnQoKTtcclxuXHRcdGFkZFRvVHJhY2tJZEFycmF5KHRyYWNrLmlkKTtcclxuXHRcdHJldHVybiB0cmFja0FycmF5O1xyXG5cdH1cclxuXHJcblx0c3ZjLnJlbW92ZUZyb21UcmFja0FycmF5ID0gZnVuY3Rpb24odHJhY2spIHtcclxuXHRcdGluZGV4ID0gdHJhY2suYXJyYXlPYmplY3RJbmRleE9mKHRyYWNrQXJyYXksIHRyYWNrLmlkLCBcImlkXCIpO1xyXG5cdFx0aWYoaW5kZXggPiAtMSkge1xyXG5cdFx0XHR0cmFja0FycmF5LnNwbGljZShpbmRleCwgMSk7XHJcblx0XHR9XHJcblx0XHRcclxuXHRcdGRlY3JlbWVudFRyYWNrQXJyYXlDb3VudCgpO1xyXG5cdFx0cmVtb3ZlRnJvbVRyYWNrSWRBcnJheSh0cmFjay5pZCk7XHJcblx0XHRyZXR1cm4gdHJhY2tBcnJheTtcclxuXHR9XHJcblxyXG5cdHN2Yy5nZXRUcmFja0FycmF5ID0gZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gdHJhY2tBcnJheTtcclxuXHR9XHJcblxyXG5cdFxyXG5cclxuXHJcblxyXG5cclxuXHRzdmMudGVzdEZ1bmN0aW9uID0gZnVuY3Rpb24oKSB7XHJcblx0XHRhbGVydChcIlRlc3QgZnVuY3Rpb24gY2FsbGVkIGZyb20gaW5zaWRlIHNlcnZpY2UhXCIpO1xyXG5cdH1cclxufSkiLCJhcHAuc2VydmljZShcImZpbHRlclNlcnZpY2VcIiwgZnVuY3Rpb24oaW5zdHJ1bWVudFNlcnZpY2UpIHtcblx0XG5cdHZhciBzdmMgPSB0aGlzO1xuXHR2YXIgaW5zdFN2YyA9IGluc3RydW1lbnRTZXJ2aWNlO1xuXG5cblx0c3ZjLmNyZWF0ZVNvbG9GaWx0ZXJEYXRhID0gZnVuY3Rpb24oKVxuXHR7XG5cdFx0c3ZjLnNvbG9GaWx0ZXJEYXRhID0ge1x0XCJhcnRpc3RcIjogXCJcIixcblx0XHRcdFx0XHRcdFx0XHRcInRpdGxlXCI6IFwiXCIsXG5cdFx0XHRcdFx0XHRcdFx0fTtcblxuXHRcdGFuZ3VsYXIuZm9yRWFjaChpbnN0U3ZjLmluc3RydW1lbnRzLCBmdW5jdGlvbih2YWx1ZSwga2V5KVxuXHRcdHtcblx0XHRcdHN2Yy5zb2xvRmlsdGVyRGF0YVt2YWx1ZS5pZF0gPSB0cnVlO1xuXHRcdH0pO1xuXHR9XG5cblx0c3ZjLmNyZWF0ZU1lcmdlZEZpbHRlckRhdGEgPSBmdW5jdGlvbigpXG5cdHtcblx0XHRzdmMubWVyZ2VkRmlsdGVyRGF0YSA9IHtcdFwiYXJ0aXN0XCI6IFwiXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcInRpdGxlXCI6IFwiXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHR9O1xuXHR9XG5cblx0ZnVuY3Rpb24gX2luaXQoKSB7XG5cdFx0c3ZjLmNyZWF0ZVNvbG9GaWx0ZXJEYXRhKCk7XG5cdFx0c3ZjLmNyZWF0ZU1lcmdlZEZpbHRlckRhdGEoKTtcblx0fVxuXG5cdF9pbml0KCk7XG59KSIsImFwcC5zZXJ2aWNlKFwiaW5zdHJ1bWVudFNlcnZpY2VcIiwgZnVuY3Rpb24oJGh0dHApIHtcblx0XG5cdC8vR2xvYmFsc1xuXHR2YXIgc3ZjID0gdGhpcztcblxuXHQvL1ByaXZhdGUgZnVuY3Rpb25zXG5cdGZ1bmN0aW9uIGdldERhdGEgKHVybCwgb3B0aW9ucykge1xuXG5cdFx0IW9wdGlvbnMgPyBvcHRpb25zID0ge30gOiBcIlwiO1xuXG5cdFx0cmV0dXJuICRodHRwLmdldCh1cmwsIG9wdGlvbnMpXG5cdH1cblxuXHQvL1N2YyBmdW5jdGlvbnNcblx0c3ZjLmdldEluc3RydW1lbnRzID0gZnVuY3Rpb24gKCkge1xuXG5cdFx0dmFyIHVybCA9IENPTlNUQU5UUy5BUElfQkFTRV9VUkwgKyBcIi9pbnN0cnVtZW50c1wiO1xuXHRcdFxuXHRzdmMuaW5zdHJ1bWVudHMgPSBnZXREYXRhKHVybCk7XG5cdH1cblxuXHRzdmMuaW5zdHJ1bWVudHMgPSBbe1xuXHRcdFx0XHRcdFx0XHRcIm5hbWVcIjpcIkxlYWQtZ3VpdGFyXCIsXG5cdFx0XHRcdFx0XHRcdFwiaWRcIjoxXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcIm5hbWVcIjpcIkRydW1cIixcblx0XHRcdFx0XHRcdFx0XCJpZFwiOjJcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFwibmFtZVwiOlwiQmFzc1wiLFxuXHRcdFx0XHRcdFx0XHRcImlkXCI6M1xuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XCJuYW1lXCI6XCJLZXlzXCIsXG5cdFx0XHRcdFx0XHRcdFwiaWRcIjo0XG5cdFx0XHRcdFx0XHR9XTtcbn0pIiwiYXBwLnNlcnZpY2UoXCJtZXJnZWRTZXJ2aWNlXCIsIGZ1bmN0aW9uKCRodHRwKSB7XG5cdFxuXHQvL0dsb2JhbHNcblx0dmFyIHN2YyA9IHRoaXM7XG5cblx0Ly9Qcml2YXRlIGZ1bmN0aW9uc1xuXHRmdW5jdGlvbiBnZXREYXRhICh1cmwsIG9wdGlvbnMpIHtcblxuXHRcdCFvcHRpb25zID8gb3B0aW9ucyA9IHt9IDogXCJcIjtcblxuXHRcdHJldHVybiAkaHR0cC5nZXQodXJsLCBvcHRpb25zKVxuXHR9XG5cblx0Ly9TdmMgZnVuY3Rpb25zXG5cdHN2Yy5nZXRUcmFja3MgPSBmdW5jdGlvbiAoKSB7XG5cblx0XHR2YXIgdXJsID0gQ09OU1RBTlRTLkFQSV9CQVNFX1VSTCArIFwiL21lcmdlZHRyYWNrc1wiO1xuXHRcdFxuXHRcdHJldHVybiBnZXREYXRhKHVybCk7XG5cdH1cblxuXHRzdmMuZ2V0VHJhY2tCeUlkID0gZnVuY3Rpb24gKGlkKSB7XG5cblx0XHR2YXIgdXJsID0gQ09OU1RBTlRTLkFQSV9CQVNFX1VSTCArIFwiL21lcmdlZHRyYWNrcy9cIiArIGlkO1xuXG5cdFx0cmV0dXJuIGdldERhdGEodXJsKTtcblx0fVxufSkiLCJhcHAuc2VydmljZShcInNvbG9TZXJ2aWNlXCIsIGZ1bmN0aW9uKCRodHRwKSB7XG5cdFxuXHQvL0dsb2JhbHNcblx0dmFyIHN2YyA9IHRoaXM7XG5cblx0Ly9Qcml2YXRlIGZ1bmN0aW9uc1xuXHRmdW5jdGlvbiBnZXREYXRhICh1cmwsIG9wdGlvbnMpIHtcblxuXHRcdCFvcHRpb25zID8gb3B0aW9ucyA9IHt9IDogXCJcIjtcblxuXHRcdHJldHVybiAkaHR0cC5nZXQodXJsLCBvcHRpb25zKVxuXHR9XG5cblx0Ly9TdmMgZnVuY3Rpb25zXG5cdHN2Yy5nZXRUcmFja3MgPSBmdW5jdGlvbiAoKSB7XG5cblx0XHR2YXIgdXJsID0gQ09OU1RBTlRTLkFQSV9CQVNFX1VSTCArIFwiL3RyYWNrc1wiO1xuXHRcdFxuXHRcdHJldHVybiBnZXREYXRhKHVybCk7XG5cdH1cblxuXHRzdmMuZ2V0VHJhY2tCeUlkID0gZnVuY3Rpb24gKGlkKSB7XG5cblx0XHR2YXIgdXJsID0gQ09OU1RBTlRTLkFQSV9CQVNFX1VSTCArIFwiL3RyYWNrcy9cIiArIGlkO1xuXG5cdFx0cmV0dXJuIGdldERhdGEodXJsKTtcblx0fVxufSkiLCJhcHAuc2VydmljZShcInVzZXJTZXJ2aWNlXCIsIGZ1bmN0aW9uKCRodHRwKSB7XHRcclxuXHRcclxuXHR2YXIgc3ZjID0gdGhpcztcclxuXHJcblx0c3ZjLmdldFVzZXIgPSBmdW5jdGlvbigpXHJcblx0e1xyXG5cdFx0cmV0dXJuICRodHRwLmdldChDT05TVEFOVFMuQVBJX0JBU0VfVVJMICsgXCIvdXNlclwiKTtcclxuXHR9XHJcblxyXG5cdHN2Yy51cGRhdGVVc2VyID0gZnVuY3Rpb24oZGF0YSlcclxuXHR7XHJcblx0XHRyZXR1cm4gJGh0dHAucG9zdChDT05TVEFOVFMuQVBJX0JBU0VfVVJMICsgXCIvdXNlclwiLCBkYXRhKTtcclxuXHR9XHJcbn0pIiwiYXBwLmRpcmVjdGl2ZShcImRjYkJhbmRcIiwgZnVuY3Rpb24oYmFuZFNlcnZpY2UpIHtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6IFwiRVwiLFxyXG5cdFx0dGVtcGxhdGVVcmw6IFwiYXBwL2RpcmVjdGl2ZXMvZGNiLWJhbmQvZGNiLWJhbmQuaHRtbFwiLFxyXG5cdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdHNjb3BlOiB7fSxcclxuXHRcdGNvbnRyb2xsZXJBczogXCJiYW5kXCIsXHJcblx0XHRjb250cm9sbGVyOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0dmFyIHZtID0gdGhpcztcclxuXHRcdFx0dmFyIGJhbmRTdmMgPSBiYW5kU2VydmljZTtcclxuXHJcblx0XHRcdGZ1bmN0aW9uIF9pbml0KCkge1xyXG5cdFx0XHRcdHZtLnZhbHVlID0gXCJOZXdCYW5kXCI7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdF9pbml0KCk7XHJcblx0XHR9XHJcblx0fVxyXG59KSIsImFwcC5kaXJlY3RpdmUoXCJkY2JIZWFkZXJcIiwgZnVuY3Rpb24oYmFuZFNlcnZpY2UpIHtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6IFwiRVwiLFxyXG5cdFx0dGVtcGxhdGVVcmw6IFwiYXBwL2RpcmVjdGl2ZXMvZGNiLWhlYWRlci9kY2ItaGVhZGVyLmh0bWxcIixcclxuXHRcdHJlcGxhY2U6IHRydWUsXHJcblx0XHRzY29wZToge30sXHJcblx0XHRjb250cm9sbGVyQXM6IFwiaGVhZFwiLFxyXG5cdFx0Y29udHJvbGxlcjogZnVuY3Rpb24oJHNjb3BlLCB1c2VyU2VydmljZSwgYXV0aFNlcnZpY2UsICRhdXRoLCAkcm9vdFNjb3BlKSB7XHJcblx0XHRcdFxyXG5cdFx0XHR2YXIgdm0gXHRcdFx0PSB0aGlzO1xyXG5cdFx0XHR2YXIgdXNlclN2YyBcdD0gdXNlclNlcnZpY2U7XHJcblx0XHRcdHZhciBhdXRoU3ZjIFx0PSBhdXRoU2VydmljZTtcclxuXHRcdFx0dmFyIGJhbmRTdmMgXHQ9IGJhbmRTZXJ2aWNlO1xyXG5cclxuXHRcdFx0ZnVuY3Rpb24gX2luaXQoKSB7XHJcblx0XHRcdFx0dm0udHJhY2tBcnJheSA9IGJhbmRTdmMuZ2V0VHJhY2tBcnJheTtcclxuXHRcdFx0XHR2bS50cmFja0FycmF5Q291bnQgPSBiYW5kU3ZjLmdldFRyYWNrQXJyYXlDb3VudDtcclxuXHJcblx0XHRcdFx0aWYoJGF1dGguaXNBdXRoZW50aWNhdGVkKCkpXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0dXNlclN2Yy5nZXRVc2VyKCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG5cdFx0XHRcdFx0XHQkcm9vdFNjb3BlLnVzZXJuYW1lID0gZGF0YS5kYXRhLnVzZXJuYW1lO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHR2bS5zaG93TG9naW4gPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0JCgnI2xvZ2luX21vZGFsJykubW9kYWwoKTtcclxuXHRcdFx0XHQkKCcjbG9naW5fbW9kYWwnKS5tb2RhbCgnb3BlbicpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHR2bS5sb2dvdXQgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0YXV0aFN2Yy5sb2dvdXQoKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dm0uc2hvd1JlZ2lzdGVyID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdCQoJyNyZWdpc3Rlcl9tb2RhbCcpLm1vZGFsKCk7XHJcblx0XHRcdFx0JCgnI3JlZ2lzdGVyX21vZGFsJykubW9kYWwoJ29wZW4nKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dm0uaXNBdXRoZW50aWNhdGVkID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuICRhdXRoLmlzQXV0aGVudGljYXRlZCgpO1xyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0X2luaXQoKTtcclxuXHJcblx0XHRcdC8vV2F0Y2hlc1xyXG5cdFx0XHQkc2NvcGUuJHdhdGNoKFxyXG5cdFx0XHRcdGZ1bmN0aW9uICgpIHsgcmV0dXJuIGF1dGhTdmMudXNlciB9LCBcclxuXHRcdFx0XHRmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0XHRcdFx0dm0udXNlciA9IGF1dGhTdmMudXNlcjtcclxuXHRcdFx0XHRcdC8vY29uc29sZS5sb2codm0udXNlcik7XHJcblx0XHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fVxyXG59KSIsImFwcC5kaXJlY3RpdmUoXCJkY2JMb2dpblwiLCBmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6IFwiRVwiLFxyXG5cdFx0dGVtcGxhdGVVcmw6IFwiYXBwL2RpcmVjdGl2ZXMvZGNiLWxvZ2luL2RjYi1sb2dpbi5odG1sXCIsXHJcblx0XHRyZXBsYWNlOiB0cnVlLFxyXG5cdFx0c2NvcGU6IHt9LFxyXG5cdFx0Y29udHJvbGxlckFzOiBcImxvZ2luXCIsXHJcblx0XHRjb250cm9sbGVyOiBmdW5jdGlvbigkYXV0aCwgJHNjb3BlLCAkcm9vdFNjb3BlLCB1c2VyU2VydmljZSwgYXV0aFNlcnZpY2UsICRjb29raWVzKSB7XHJcblx0XHRcdHZhciB2bSBcdFx0XHQ9IHRoaXM7XHJcblx0XHRcdHZhciB1c2VyU3ZjIFx0PSB1c2VyU2VydmljZTtcclxuXHRcdFx0dmFyIGF1dGhTdmMgXHQ9IGF1dGhTZXJ2aWNlO1xyXG5cdFx0XHR2YXIgdGFyZ2V0IFx0XHQ9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2dpbi1zcGlubmVyJyk7XHJcblxyXG5cdFx0XHR2YXIgb3B0cyA9IHtcclxuXHQgIFx0XHRcdGxpbmVzOiAxMyAvLyBUaGUgbnVtYmVyIG9mIGxpbmVzIHRvIGRyYXdcclxuXHRcdFx0XHQsIGxlbmd0aDogMjggLy8gVGhlIGxlbmd0aCBvZiBlYWNoIGxpbmVcclxuXHRcdFx0XHQsIHdpZHRoOiAxNCAvLyBUaGUgbGluZSB0aGlja25lc3NcclxuXHRcdFx0XHQsIHJhZGl1czogNDIgLy8gVGhlIHJhZGl1cyBvZiB0aGUgaW5uZXIgY2lyY2xlXHJcblx0XHRcdFx0LCBzY2FsZTogMC40IC8vIFNjYWxlcyBvdmVyYWxsIHNpemUgb2YgdGhlIHNwaW5uZXJcclxuXHRcdFx0XHQsIGNvcm5lcnM6IDEgLy8gQ29ybmVyIHJvdW5kbmVzcyAoMC4uMSlcclxuXHRcdFx0XHQsIGNvbG9yOiAnIzAwMCcgLy8gI3JnYiBvciAjcnJnZ2JiIG9yIGFycmF5IG9mIGNvbG9yc1xyXG5cdFx0XHRcdCwgb3BhY2l0eTogMC4yNSAvLyBPcGFjaXR5IG9mIHRoZSBsaW5lc1xyXG5cdFx0XHRcdCwgcm90YXRlOiAwIC8vIFRoZSByb3RhdGlvbiBvZmZzZXRcclxuXHRcdFx0XHQsIGRpcmVjdGlvbjogMSAvLyAxOiBjbG9ja3dpc2UsIC0xOiBjb3VudGVyY2xvY2t3aXNlXHJcblx0XHRcdFx0LCBzcGVlZDogMSAvLyBSb3VuZHMgcGVyIHNlY29uZFxyXG5cdFx0XHRcdCwgdHJhaWw6IDYwIC8vIEFmdGVyZ2xvdyBwZXJjZW50YWdlXHJcblx0XHRcdFx0LCBmcHM6IDIwIC8vIEZyYW1lcyBwZXIgc2Vjb25kIHdoZW4gdXNpbmcgc2V0VGltZW91dCgpIGFzIGEgZmFsbGJhY2sgZm9yIENTU1xyXG5cdFx0XHRcdCwgekluZGV4OiAyZTkgLy8gVGhlIHotaW5kZXggKGRlZmF1bHRzIHRvIDIwMDAwMDAwMDApXHJcblx0XHRcdFx0LCBjbGFzc05hbWU6ICdzcGlubmVyJyAvLyBUaGUgQ1NTIGNsYXNzIHRvIGFzc2lnbiB0byB0aGUgc3Bpbm5lclxyXG5cdFx0XHRcdCwgdG9wOiAnNjAlJyAvLyBUb3AgcG9zaXRpb24gcmVsYXRpdmUgdG8gcGFyZW50XHJcblx0XHRcdFx0LCBsZWZ0OiAnNTAlJyAvLyBMZWZ0IHBvc2l0aW9uIHJlbGF0aXZlIHRvIHBhcmVudFxyXG5cdFx0XHRcdCwgc2hhZG93OiBmYWxzZSAvLyBXaGV0aGVyIHRvIHJlbmRlciBhIHNoYWRvd1xyXG5cdFx0XHRcdCwgaHdhY2NlbDogZmFsc2UgLy8gV2hldGhlciB0byB1c2UgaGFyZHdhcmUgYWNjZWxlcmF0aW9uXHJcblx0XHRcdFx0LCBwb3NpdGlvbjogJ2Fic29sdXRlJyAvLyBFbGVtZW50IHBvc2l0aW9uaW5nXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vUHJpdmF0ZSBmdW5jdGlvbnNcclxuXHRcdFx0ZnVuY3Rpb24gbG9naW4gKHRva2VuLCBpZCwgdXNlcm5hbWUsIGVtYWlsKSB7XHJcblxyXG5cdFx0XHRcdHZhciBleHBpcmF0aW9uVGltZSA9IG5ldyBEYXRlKCk7XHJcblx0XHRcdFx0ZXhwaXJhdGlvblRpbWUgPSBleHBpcmF0aW9uVGltZS5zZXRUaW1lKGV4cGlyYXRpb25UaW1lLmdldFRpbWUoKSArICh0b2tlbltcImV4cGlyZXNfaW5cIl0gKiAxMDAwKSk7XHJcblx0XHRcdFx0ZXhwaXJhdGlvblRpbWUgPSBuZXcgRGF0ZShleHBpcmF0aW9uVGltZSk7XHJcblxyXG5cdFx0XHRcdHZhciB1c2VyRGF0YSA9IHtcclxuXHJcblx0XHRcdFx0XHR0b2tlbjogdG9rZW4sXHJcblx0XHRcdFx0XHR1c2VySWQ6IGlkLFxyXG5cdFx0XHRcdFx0dXNlcm5hbWU6IHVzZXJuYW1lLFxyXG5cdFx0XHRcdFx0ZW1haWw6IGVtYWlsLFxyXG5cdFx0XHRcdFx0Ly9pc0FkbWluOiBkYXRhLmRhdGEuaXNBZG1pblxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Y29uc29sZS5sb2codXNlckRhdGEudG9rZW4pO1xyXG5cclxuXHRcdFx0XHRhdXRoU3ZjLnVzZXIgPSB1c2VyRGF0YTtcclxuXHJcblx0XHRcdFx0JGNvb2tpZXMucHV0T2JqZWN0KFwidXNlclwiLCB1c2VyRGF0YSwgeyBleHBpcmVzOiBleHBpcmF0aW9uVGltZSB9KTtcclxuXHRcdFx0XHQkcm9vdFNjb3BlLmlzTG9nZ2VkSW4gPSB0cnVlO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdC8vQ2hlY2sgaWYgcmV0dXJuZWQgdXNlciBpcyBBZG1pblxyXG5cdFx0XHRcdHVzZXJEYXRhLmlzQWRtaW4gPT0gXCIxXCIgPyAkcm9vdFNjb3BlLmlzQWRtaW4gPSB0cnVlIDogJHJvb3RTY29wZS5pc0FkbWluID0gZmFsc2U7XHJcblx0XHRcdH1cclxuXHJcblxyXG5cdFx0XHQvL1ZtIGZ1bmN0aW9uc1xyXG5cdCAgICAgICAgdm0ubG9naW4gPSBmdW5jdGlvbigpIHtcclxuXHQgICAgICAgIFx0dmFyIHNwaW5uZXIgPSBuZXcgU3Bpbm5lcihvcHRzKS5zcGluKHRhcmdldCk7XHJcblx0ICAgICAgICBcdHZtLmxvYWRpbmcgXHQ9IHRydWU7XHJcblxyXG5cdCAgICAgICAgICAgIHZhciBjcmVkZW50aWFscyA9IHtcclxuXHQgICAgICAgICAgICAgICAgZW1haWw6IHZtLmVtYWlsLFxyXG5cdCAgICAgICAgICAgICAgICBwYXNzd29yZDogdm0ucGFzc3dvcmRcclxuXHQgICAgICAgICAgICB9XHJcblx0ICAgICAgICAgICAgXHJcblx0ICAgICAgICAgICAgYXV0aFN2Yy5sb2dpbihjcmVkZW50aWFscyk7XHJcblxyXG5cdCAgICAgICAgICAgIC8vV2F0Y2hlc1xyXG5cdFx0XHRcdHZhciB1bnJlZ2lzdGVyID0gJHNjb3BlLiR3YXRjaChcclxuXHRcdFx0XHRcdGZ1bmN0aW9uICgpIHsgcmV0dXJuIGF1dGhTdmMuaXNMb2dnZWRJbiB9LCBcclxuXHRcdFx0XHRcdGZ1bmN0aW9uICgpIHtcclxuXHJcblx0XHRcdFx0XHRcdGlmKGF1dGhTdmMuaXNMb2dnZWRJbikgXHJcblx0XHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0XHR2bS5sb2FkaW5nID0gZmFsc2U7XHJcblx0XHRcdFx0ICAgICAgICBcdCQoJyNsb2dpbl9tb2RhbCcpLm1vZGFsKCk7XHJcblx0XHRcdFx0XHRcdFx0JCgnI2xvZ2luX21vZGFsJykubW9kYWwoJ2Nsb3NlJyk7XHJcblx0XHRcdFx0ICAgICAgICBcdHNwaW5uZXIuc3RvcCgpO1xyXG5cdFx0XHRcdCAgICAgICAgXHR1bnJlZ2lzdGVyKCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0aWYoYXV0aFN2Yy5pc0xvZ2dlZEluID09PSBmYWxzZSlcclxuXHRcdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRcdHNwaW5uZXIuc3RvcCgpO1xyXG4gICAgICAgIFx0XHRcdFx0XHR2bS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgXHRcdFx0XHRcdHVucmVnaXN0ZXIoKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSwgdHJ1ZSk7XHJcblx0ICAgICAgICB9XHJcblx0XHR9XHJcblx0fVxyXG59KSIsImFwcC5kaXJlY3RpdmUoXCJkY2JSZWdpc3RlclwiLCBmdW5jdGlvbih1c2VyU2VydmljZSkge1xyXG5cdHJldHVybiB7XHJcblx0XHRyZXN0cmljdDogXCJFXCIsXHJcblx0XHR0ZW1wbGF0ZVVybDogXCJhcHAvZGlyZWN0aXZlcy9kY2ItcmVnaXN0ZXIvZGNiLXJlZ2lzdGVyLmh0bWxcIixcclxuXHRcdHJlcGxhY2U6IHRydWUsXHJcblx0XHRzY29wZToge30sXHJcblx0XHRjb250cm9sbGVyQXM6IFwicmVnaXN0ZXJcIixcclxuXHRcdGNvbnRyb2xsZXI6IGZ1bmN0aW9uKCRhdXRoLCAkc2NvcGUsICRyb290U2NvcGUsIHVzZXJTZXJ2aWNlLCBhdXRoU2VydmljZSkge1xyXG5cdFx0XHR2YXIgdm0gXHRcdFx0PSB0aGlzO1xyXG5cdFx0XHR2YXIgdXNlclN2YyBcdD0gdXNlclNlcnZpY2U7XHJcblx0XHRcdHZhciBhdXRoU3ZjIFx0PSBhdXRoU2VydmljZTtcclxuXHRcdFx0dmFyIHRhcmdldCBcdFx0PSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVnaXN0ZXItc3Bpbm5lcicpO1xyXG5cclxuXHRcdFx0dmFyIG9wdHMgPSB7XHJcblx0ICBcdFx0XHRsaW5lczogMTMgLy8gVGhlIG51bWJlciBvZiBsaW5lcyB0byBkcmF3XHJcblx0XHRcdFx0LCBsZW5ndGg6IDI4IC8vIFRoZSBsZW5ndGggb2YgZWFjaCBsaW5lXHJcblx0XHRcdFx0LCB3aWR0aDogMTQgLy8gVGhlIGxpbmUgdGhpY2tuZXNzXHJcblx0XHRcdFx0LCByYWRpdXM6IDQyIC8vIFRoZSByYWRpdXMgb2YgdGhlIGlubmVyIGNpcmNsZVxyXG5cdFx0XHRcdCwgc2NhbGU6IDAuNCAvLyBTY2FsZXMgb3ZlcmFsbCBzaXplIG9mIHRoZSBzcGlubmVyXHJcblx0XHRcdFx0LCBjb3JuZXJzOiAxIC8vIENvcm5lciByb3VuZG5lc3MgKDAuLjEpXHJcblx0XHRcdFx0LCBjb2xvcjogJyMwMDAnIC8vICNyZ2Igb3IgI3JyZ2diYiBvciBhcnJheSBvZiBjb2xvcnNcclxuXHRcdFx0XHQsIG9wYWNpdHk6IDAuMjUgLy8gT3BhY2l0eSBvZiB0aGUgbGluZXNcclxuXHRcdFx0XHQsIHJvdGF0ZTogMCAvLyBUaGUgcm90YXRpb24gb2Zmc2V0XHJcblx0XHRcdFx0LCBkaXJlY3Rpb246IDEgLy8gMTogY2xvY2t3aXNlLCAtMTogY291bnRlcmNsb2Nrd2lzZVxyXG5cdFx0XHRcdCwgc3BlZWQ6IDEgLy8gUm91bmRzIHBlciBzZWNvbmRcclxuXHRcdFx0XHQsIHRyYWlsOiA2MCAvLyBBZnRlcmdsb3cgcGVyY2VudGFnZVxyXG5cdFx0XHRcdCwgZnBzOiAyMCAvLyBGcmFtZXMgcGVyIHNlY29uZCB3aGVuIHVzaW5nIHNldFRpbWVvdXQoKSBhcyBhIGZhbGxiYWNrIGZvciBDU1NcclxuXHRcdFx0XHQsIHpJbmRleDogMmU5IC8vIFRoZSB6LWluZGV4IChkZWZhdWx0cyB0byAyMDAwMDAwMDAwKVxyXG5cdFx0XHRcdCwgY2xhc3NOYW1lOiAnc3Bpbm5lcicgLy8gVGhlIENTUyBjbGFzcyB0byBhc3NpZ24gdG8gdGhlIHNwaW5uZXJcclxuXHRcdFx0XHQsIHRvcDogJzYwJScgLy8gVG9wIHBvc2l0aW9uIHJlbGF0aXZlIHRvIHBhcmVudFxyXG5cdFx0XHRcdCwgbGVmdDogJzUwJScgLy8gTGVmdCBwb3NpdGlvbiByZWxhdGl2ZSB0byBwYXJlbnRcclxuXHRcdFx0XHQsIHNoYWRvdzogZmFsc2UgLy8gV2hldGhlciB0byByZW5kZXIgYSBzaGFkb3dcclxuXHRcdFx0XHQsIGh3YWNjZWw6IGZhbHNlIC8vIFdoZXRoZXIgdG8gdXNlIGhhcmR3YXJlIGFjY2VsZXJhdGlvblxyXG5cdFx0XHRcdCwgcG9zaXRpb246ICdhYnNvbHV0ZScgLy8gRWxlbWVudCBwb3NpdGlvbmluZ1xyXG5cdFx0XHR9XHJcblxyXG5cclxuXHRcdFx0XHJcblx0XHRcdHZtLnJlZ2lzdGVyID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0dmFyIHNwaW5uZXIgPSBuZXcgU3Bpbm5lcihvcHRzKS5zcGluKHRhcmdldCk7XHJcblx0ICAgICAgICBcdHZtLmxvYWRpbmcgXHQ9IHRydWU7XHJcblxyXG5cdFx0XHRcdHZhciB1c2VyID0ge1xyXG5cdFx0XHRcdCAgXHR1c2VybmFtZTogdm0udXNlcm5hbWUsXHJcblx0XHRcdFx0ICBcdGVtYWlsOiB2bS5lbWFpbCxcclxuXHRcdFx0XHQgIFx0cGFzc3dvcmQ6IHZtLnBhc3N3b3JkXHJcblx0XHRcdFx0fTtcclxuXHJcblx0XHRcdFx0JGF1dGguc2lnbnVwKHVzZXIpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdC8vIFJlZ2lzdHJhdGlvbiBzdWNjZXNzXHJcblx0XHRcdFx0XHRhdXRoU3ZjLmxvZ2luKHVzZXIpO1xyXG5cclxuXHRcdCAgICAgICAgICAgIC8vV2F0Y2hlc1xyXG5cdFx0XHRcdFx0dmFyIHVucmVnaXN0ZXIgPSAkc2NvcGUuJHdhdGNoKFxyXG5cdFx0XHRcdFx0XHRmdW5jdGlvbiAoKSB7IHJldHVybiBhdXRoU3ZjLmlzTG9nZ2VkSW4gfSwgXHJcblx0XHRcdFx0XHRcdGZ1bmN0aW9uICgpIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0aWYoYXV0aFN2Yy5pc0xvZ2dlZEluKSBcclxuXHRcdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFx0XHR2bS5sb2FkaW5nID0gZmFsc2U7XHJcblx0XHRcdFx0XHQgICAgICAgIFx0JCgnI3JlZ2lzdGVyX21vZGFsJykubW9kYWwoKTtcclxuXHRcdFx0XHRcdFx0XHRcdCQoJyNyZWdpc3Rlcl9tb2RhbCcpLm1vZGFsKCdjbG9zZScpO1xyXG5cdFx0XHRcdFx0ICAgICAgICBcdHNwaW5uZXIuc3RvcCgpO1xyXG5cdFx0XHRcdFx0ICAgICAgICBcdHVucmVnaXN0ZXIoKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0aWYoYXV0aFN2Yy5pc0xvZ2dlZEluID09PSBmYWxzZSlcclxuXHRcdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFx0XHRzcGlubmVyLnN0b3AoKTtcclxuXHQgICAgICAgIFx0XHRcdFx0XHR2bS5sb2FkaW5nID0gZmFsc2U7XHJcblx0ICAgICAgICBcdFx0XHRcdFx0dW5yZWdpc3RlcigpO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fSwgdHJ1ZSk7XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0XHQuY2F0Y2goZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdC8vIFJlZ2lzdHJhdGlvbiBmYWlsZWRcclxuXHRcdFx0XHQgIFx0c3Bpbm5lci5zdG9wKCk7XHJcblx0XHRcdFx0ICBcdHZtLmxvYWRpbmcgPSBmYWxzZTtcclxuXHRcdFx0XHQgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59KSJdfQ==
